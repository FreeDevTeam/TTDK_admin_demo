{"version":3,"sources":["utility/Utils.js","@core/components/avatar/index.js","utility/hooks/useSkin.js","redux/actions/auth/index.js","redux/actions/layout/index.js","@core/layouts/components/layout-wrapper/index.js","router/routes/Pages.js","router/routes/Dashboards.js","router/routes/index.js","@core/layouts/BlankLayout.js","@core/layouts/components/footer/index.js","@core/layouts/components/navbar/UserDropdown.js","@core/layouts/components/navbar/NavbarUser.js","@core/layouts/components/navbar/NavbarBookmarks.js","redux/actions/navbar/index.js","@core/layouts/components/navbar/index.js","navigation/vertical/pages.js","navigation/vertical/dashboards.js","navigation/vertical/index.js","@core/layouts/components/menu/vertical-menu/VerticalMenuHeader.js","@core/layouts/utils.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuLink.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuGroup.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuSectionHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuItems.js","@core/layouts/components/menu/vertical-menu/index.js","@core/layouts/VerticalLayout.js","utility/hooks/useRTL.js","utility/hooks/useNavbarType.js","utility/hooks/useFooterType.js","utility/hooks/useNavbarColor.js","layouts/VerticalLayout.js","router/Router.js","utility/hooks/useLayout.js","utility/hooks/useRouterTransition.js","App.js"],"names":["isObjEmpty","obj","Object","keys","length","kFormatter","num","toFixed","isUserLoggedIn","localStorage","getItem","getHomeRouteForLoggedInUser","userRole","selectThemeColors","theme","colors","primary25","primary","neutral10","neutral20","neutral30","Avatar","forwardRef","props","ref","color","className","imgClassName","initials","size","badgeUp","content","icon","badgeColor","badgeText","img","imgHeight","imgWidth","status","Tag","tag","contentStyles","rest","classnames","undefined","style","str","results","split","forEach","e","push","join","getInitials","pill","src","alt","height","width","defaultProps","useSkin","useState","item","window","JSON","parse","themeConfig","layout","skin","error","console","log","setSkin","useEffect","element","document","body","classList","remove","add","dark","bordered","value","valueToStore","Function","setItem","stringify","handleLogin","data","dispatch","type","config","accessToken","refreshToken","handleLogout","removeItem","handleContentWidth","handleMenuCollapsed","handleMenuHidden","LayoutWrapper","children","appLayout","wrapperClass","transition","routeMeta","useDispatch","store","useSelector","state","navbarStore","navbar","contentWidth","Fragment","menuCollapsed","menuHidden","query","PagesRoutes","path","component","lazy","meta","authRoute","publicRoute","DashboardRoutes","exact","Routes","BlankLayout","isMounted","setIsMounted","Footer","Date","getFullYear","onClick","preventDefault","href","target","rel","injectIntl","intl","userData","setUserData","userAvatar","avatar","defaultAvatar","UncontrolledDropdown","DropdownToggle","roleName","DropdownMenu","right","DropdownItem","Link","to","formatMessage","id","NavbarUser","ThemeToggler","NavItem","NavLink","NavbarBookmarks","setMenuVisibility","axios","get","then","response","suggestions","bookmarks","ThemeNavbar","title","permissions","navLink","badge","dashboards","pages","VerticalMenuHeader","setMenuCollapsed","setGroupOpen","menuHover","Toggler","data-tour","app","appLogoImage","appName","isNavLinkActive","link","currentURL","routerProps","isNavGroupActive","some","child","search","navigation","result","getAllParents","match","res","recurse","current","key","VerticalNavMenuLink","setGroupActive","groupActive","activeItem","setActiveItem","groupOpen","toggleActiveGroup","parentItem","currentActiveItem","LinkTag","externalLink","location","useLocation","pathname","matchPath","strict","arr","parents","searchParents","disabled","active","newTab","isActive","url","resetActiveGroup","Badge","VerticalNavMenuGroup","allParents","activeArr","includes","splice","indexOf","openArr","filter","val","onCollapseClick","pop","toggleOpenGroup","open","Collapse","isOpen","VerticalNavMenuItems","items","VerticalNavMenuSectionHeader","index","header","VerticalMenuNavItems","useContext","AbilityContext","Components","map","TagName","resolveNavItemComponent","canViewMenuItem","Sidebar","menu","setMenuHover","shadowRef","useRef","expanded","onMouseEnter","onMouseLeave","options","wheelPropagation","onScrollY","container","scrollTop","contains","scrollMenu","VerticalLayout","footer","isRtl","isRTL","getElementsByTagName","setAttribute","handleRTL","useRTL","navbarType","setNavbarType","useNavbarType","footerType","setFooterType","useFooterType","backgroundColor","navbarColor","setNavbarColor","useNavbarColor","menuVisibility","innerWidth","windowWidth","setWindowWidth","layoutStore","handleWindowWidth","isHidden","addEventListener","footerClasses","static","sticky","hidden","bgColorCondition","floating","Navbar","expand","light","show","showUnder","bottom","Button","Router","lastLayout","setLastLayout","setLayout","handleLayout","useLayout","routerTransition","setTransition","useRouterTransition","DefaultLayout","Layouts","NotAuthorized","Error","FinalRoute","route","action","resource","basename","process","REACT_APP_BASENAME","render","LayoutTag","LayoutRoutes","LayoutPaths","LayoutRoutesAndPaths","assign","fallback","App"],"mappings":"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","file":"static/js/18.c77758e9.chunk.js","sourcesContent":["// ** Checks if an object is empty (returns boolean)\r\nexport const isObjEmpty = obj => Object.keys(obj).length === 0\r\n\r\n// ** Returns K format from a number\r\nexport const kFormatter = num => (num > 999 ? `${(num / 1000).toFixed(1)}k` : num)\r\n\r\n// ** Converts HTML to string\r\nexport const htmlToString = html => html.replace(/<\\/?[^>]+(>|$)/g, '')\r\n\r\n// ** Checks if the passed date is today\r\nconst isToday = date => {\r\n  const today = new Date()\r\n  return (\r\n    /* eslint-disable operator-linebreak */\r\n    date.getDate() === today.getDate() &&\r\n    date.getMonth() === today.getMonth() &&\r\n    date.getFullYear() === today.getFullYear()\r\n    /* eslint-enable */\r\n  )\r\n}\r\n\r\n/**\r\n ** Format and return date in Humanize format\r\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\r\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\r\n * @param {String} value date to format\r\n * @param {Object} formatting Intl object to format with\r\n */\r\nexport const formatDate = (value, formatting = { month: 'short', day: 'numeric', year: 'numeric' }) => {\r\n  if (!value) return value\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n// ** Returns short month of passed date\r\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\r\n  const date = new Date(value)\r\n  let formatting = { month: 'short', day: 'numeric' }\r\n\r\n  if (toTimeForCurrentDay && isToday(date)) {\r\n    formatting = { hour: 'numeric', minute: 'numeric' }\r\n  }\r\n\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n/**\r\n ** Return if user is logged in\r\n ** This is completely up to you and how you want to store the token in your frontend application\r\n *  ? e.g. If you are using cookies to store the application please update this function\r\n */\r\nexport const isUserLoggedIn = () => localStorage.getItem('userData')\r\nexport const getUserData = () => JSON.parse(localStorage.getItem('userData'))\r\n\r\n/**\r\n ** This function is used for demo purpose route navigation\r\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\r\n ** Please note role field is just for showing purpose it's not used by anything in frontend\r\n ** We are checking role just for ease\r\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\r\n * @param {String} userRole Role of user\r\n */\r\nexport const getHomeRouteForLoggedInUser = userRole => {\r\n  if (userRole === 'admin') return '/'\r\n  if (userRole === 'client') return '/access-control'\r\n  return '/login'\r\n}\r\n\r\n// ** React Select Theme Colors\r\nexport const selectThemeColors = theme => ({\r\n  ...theme,\r\n  colors: {\r\n    ...theme.colors,\r\n    primary25: '#7367f01a', // for option hover bg-color\r\n    primary: '#7367f0', // for selected option bg-color\r\n    neutral10: '#7367f0', // for tags bg-color\r\n    neutral20: '#ededed', // for input border-color\r\n    neutral30: '#ededed' // for input hover border-color\r\n  }\r\n})\r\n","// ** React Imports\r\nimport { forwardRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Badge } from 'reactstrap'\r\nimport classnames from 'classnames'\r\n\r\nconst Avatar = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const {\r\n    color,\r\n    className,\r\n    imgClassName,\r\n    initials,\r\n    size,\r\n    badgeUp,\r\n    content,\r\n    icon,\r\n    badgeColor,\r\n    badgeText,\r\n    img,\r\n    imgHeight,\r\n    imgWidth,\r\n    status,\r\n    tag: Tag,\r\n    contentStyles,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** Function to extract initials from content\r\n  const getInitials = str => {\r\n    const results = []\r\n    const wordArray = str.split(' ')\r\n    wordArray.forEach(e => {\r\n      results.push(e[0])\r\n    })\r\n    return results.join('')\r\n  }\r\n\r\n  return (\r\n    <Tag\r\n      className={classnames('avatar', {\r\n        [className]: className,\r\n        [`bg-${color}`]: color,\r\n        [`avatar-${size}`]: size\r\n      })}\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      {img === false || img === undefined ? (\r\n        <span\r\n          className={classnames('avatar-content', {\r\n            'position-relative': badgeUp\r\n          })}\r\n          style={contentStyles}\r\n        >\r\n          {initials ? getInitials(content) : content}\r\n\r\n          {icon ? icon : null}\r\n          {badgeUp ? (\r\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\r\n              {badgeText ? badgeText : '0'}\r\n            </Badge>\r\n          ) : null}\r\n        </span>\r\n      ) : (\r\n        <img\r\n          className={classnames({\r\n            [imgClassName]: imgClassName\r\n          })}\r\n          src={img}\r\n          alt='avatarImg'\r\n          height={imgHeight && !size ? imgHeight : 32}\r\n          width={imgWidth && !size ? imgWidth : 32}\r\n        />\r\n      )}\r\n      {status ? (\r\n        <span\r\n          className={classnames({\r\n            [`avatar-status-${status}`]: status,\r\n            [`avatar-status-${size}`]: size\r\n          })}\r\n        ></span>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n})\r\n\r\nexport default Avatar\r\n\r\n// ** PropTypes\r\nAvatar.propTypes = {\r\n  imgClassName: Proptypes.string,\r\n  className: Proptypes.string,\r\n  src: Proptypes.string,\r\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\r\n  badgeUp: Proptypes.bool,\r\n  content: Proptypes.string,\r\n  icon: Proptypes.node,\r\n  contentStyles: Proptypes.object,\r\n  badgeText: Proptypes.string,\r\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\r\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\r\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\r\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\r\n  badgeColor: Proptypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'info',\r\n    'warning',\r\n    'dark',\r\n    'light-primary',\r\n    'light-secondary',\r\n    'light-success',\r\n    'light-danger',\r\n    'light-info',\r\n    'light-warning',\r\n    'light-dark'\r\n  ]),\r\n  color: Proptypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'info',\r\n    'warning',\r\n    'dark',\r\n    'light-primary',\r\n    'light-secondary',\r\n    'light-success',\r\n    'light-danger',\r\n    'light-info',\r\n    'light-warning',\r\n    'light-dark'\r\n  ]),\r\n  initials(props) {\r\n    if (props['initials'] && props['content'] === undefined) {\r\n      return new Error('content prop is required with initials prop.')\r\n    }\r\n    if (props['initials'] && typeof props['content'] !== 'string') {\r\n      return new Error('content prop must be a string.')\r\n    }\r\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\r\n      return new Error('initials must be a boolean!')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nAvatar.defaultProps = {\r\n  tag: 'div'\r\n}\r\n","//** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useSkin = () => {\r\n  // ** State\r\n  const [skin, setSkin] = useState(() => {\r\n    try {\r\n      // ** Get from local storage by key\r\n      const item = window.localStorage.getItem('skin')\r\n      // ** Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : themeConfig.layout.skin\r\n    } catch (error) {\r\n      // ** If error also return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.skin\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(skin) : value\r\n      // ** Set state\r\n      setSkin(valueToStore)\r\n      // ** Save to local storage\r\n      window.localStorage.setItem('skin', JSON.stringify(valueToStore))\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get Body Tag\r\n    const element = window.document.body\r\n\r\n    // ** Define classnames for skins\r\n    const classNames = {\r\n      dark: 'dark-layout',\r\n      bordered: 'bordered-layout',\r\n      'semi-dark': 'semi-dark-layout'\r\n    }\r\n\r\n    // ** Remove all classes from Body on mount\r\n    element.classList.remove(...element.classList)\r\n\r\n    // ** If skin is not light add skin class\r\n    if (skin !== 'light') {\r\n      element.classList.add(classNames[skin])\r\n    }\r\n  }, [skin])\r\n\r\n  return [skin, setValue]\r\n}\r\n","// ** UseJWT import to get config\r\n// import useJwt from '@src/auth/jwt/useJwt'\r\n\r\n// const config = useJwt.jwtConfig\r\n\r\n// ** Handle User Login\r\nexport const handleLogin = data => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'LOGIN',\r\n      data,\r\n      config: {},\r\n      accessToken: data.accessToken,\r\n      refreshToken: data.refreshToken\r\n    })\r\n\r\n    // ** Add to user, accessToken & refreshToken to localStorage\r\n    localStorage.setItem('userData', JSON.stringify(data))\r\n    localStorage.setItem('accessToken', JSON.stringify(data.accessToken))\r\n    localStorage.setItem('refreshToken', JSON.stringify(data.refreshToken))\r\n  }\r\n}\r\n\r\n// ** Handle User Logout\r\nexport const handleLogout = () => {\r\n  return dispatch => {\r\n    dispatch({ type: 'LOGOUT', 'accessToken': null, 'refreshToken': null })\r\n\r\n    // ** Remove user, accessToken & refreshToken from localStorage\r\n    localStorage.removeItem('userData')\r\n    localStorage.removeItem('accessToken')\r\n    localStorage.removeItem('refreshToken')\r\n  }\r\n}\r\n","// ** Handles Layout Content Width (full / boxed)\r\nexport const handleContentWidth = value => dispatch => dispatch({ type: 'HANDLE_CONTENT_WIDTH', value })\r\n\r\n// ** Handles Menu Collapsed State (Bool)\r\nexport const handleMenuCollapsed = value => dispatch => dispatch({ type: 'HANDLE_MENU_COLLAPSED', value })\r\n\r\n// ** Handles Menu Hidden State (Bool)\r\nexport const handleMenuHidden = value => dispatch => dispatch({ type: 'HANDLE_MENU_HIDDEN', value })\r\n\r\n// ** Handles RTL (Bool)\r\nexport const handleRTL = value => dispatch => dispatch({ type: 'HANDLE_RTL', value })\r\n","// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { handleContentWidth, handleMenuCollapsed, handleMenuHidden } from '@store/actions/layout'\r\n\r\n// ** Styles\r\nimport 'animate.css/animate.css'\r\n\r\nconst LayoutWrapper = props => {\r\n  // ** Props\r\n  const { layout, children, appLayout, wrapperClass, transition, routeMeta } = props\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state)\r\n  const navbarStore = store.navbar\r\n  const contentWidth = store.layout.contentWidth\r\n\r\n  //** Vars\r\n  const Tag = layout === 'HorizontalLayout' && !appLayout ? 'div' : Fragment\r\n\r\n  // ** Clean Up Function\r\n  const cleanUp = () => {\r\n    if (routeMeta) {\r\n      if (routeMeta.contentWidth) {\r\n        dispatch(handleContentWidth('full'))\r\n      }\r\n      if (routeMeta.menuCollapsed) {\r\n        dispatch(handleMenuCollapsed(!routeMeta.menuCollapsed))\r\n      }\r\n      if (routeMeta.menuHidden) {\r\n        dispatch(handleMenuHidden(!routeMeta.menuHidden))\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    if (routeMeta) {\r\n      if (routeMeta.contentWidth) {\r\n        dispatch(handleContentWidth(routeMeta.contentWidth))\r\n      }\r\n      if (routeMeta.menuCollapsed) {\r\n        dispatch(handleMenuCollapsed(routeMeta.menuCollapsed))\r\n      }\r\n      if (routeMeta.menuHidden) {\r\n        dispatch(handleMenuHidden(routeMeta.menuHidden))\r\n      }\r\n    }\r\n    return () => cleanUp()\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      className={classnames('app-content content overflow-hidden', {\r\n        [wrapperClass]: wrapperClass,\r\n        'show-overlay': navbarStore.query.length\r\n      })}\r\n    >\r\n      <div className='content-overlay'></div>\r\n      <div className='header-navbar-shadow' />\r\n      <div\r\n        className={classnames({\r\n          'content-wrapper': !appLayout,\r\n          'content-area-wrapper': appLayout,\r\n          'container p-0': contentWidth === 'boxed',\r\n          [`animate__animated animate__${transition}`]: transition !== 'none' && transition.length\r\n        })}\r\n      >\r\n        <Tag\r\n          /*eslint-disable */\r\n          {...(layout === 'HorizontalLayout' && !appLayout\r\n            ? { className: classnames({ 'content-body': !appLayout }) }\r\n            : {})}\r\n          /*eslint-enable */\r\n        >\r\n          {children}\r\n        </Tag>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LayoutWrapper\r\n","import { lazy } from 'react'\r\n// import { Redirect } from 'react-router-dom'\r\n\r\nconst PagesRoutes = [\r\n  {\r\n    path: '/login',\r\n    component: lazy(() => import('../../views/pages/authentication/Login')),\r\n    layout: 'BlankLayout',\r\n    meta: {\r\n      authRoute: true\r\n    }\r\n  },\r\n  {\r\n    path: '/pages/station',\r\n    component: lazy(() => import('../../views/pages/station/index'))\r\n  },\r\n  {\r\n    path: '/pages/form-station',\r\n    component: lazy(() => import('../../views/pages/station/formStation'))\r\n  },\r\n  {\r\n    path: '/pages/form-SMS',\r\n    component: lazy(() => import('../../views/pages/station/formSMS'))\r\n  },\r\n  {\r\n    path: '/pages/form-email',\r\n    component: lazy(() => import('../../views/pages/station/formEmail'))\r\n  },\r\n  {\r\n    path: '/pages/users',\r\n    component: lazy(() => import('../../views/pages/user/index'))\r\n  },\r\n  {\r\n    path: '/pages/account-admin',\r\n    component: lazy(() => import('../../views/pages/account-admin/index'))\r\n  },\r\n  {\r\n    path: '/pages/devices',\r\n    component: lazy(() => import('../../views/pages/device/index'))\r\n  },\r\n  {\r\n    path: '/pages/advertising',\r\n    component: lazy(() => import('../../views/pages/advertising/index'))\r\n  },\r\n  {\r\n    path: '/user/change-password',\r\n    component: lazy(() => import('../../views/pages/change-password/index'))\r\n  },\r\n  {\r\n    path: '/user/list',\r\n    component: lazy(() => import('../../views/pages/change-password/index'))\r\n  },\r\n  {\r\n    path: '/pages/setting',\r\n    component: lazy(() => import('../../views/pages/setting/index'))\r\n  },\r\n  {\r\n    path: '/misc/not-authorized',\r\n    component: lazy(() => import('../../views/pages/misc/NotAuthorized')),\r\n    layout: 'BlankLayout',\r\n    meta: {\r\n      publicRoute: true\r\n    }\r\n  },\r\n  {\r\n    path: '/misc/maintenance',\r\n    component: lazy(() => import('../../views/pages/misc/Maintenance')),\r\n    layout: 'BlankLayout',\r\n    meta: {\r\n      publicRoute: true\r\n    }\r\n  },\r\n  {\r\n    path: '/misc/error',\r\n    component: lazy(() => import('../../views/pages/misc/Error')),\r\n    layout: 'BlankLayout',\r\n    meta: {\r\n      publicRoute: true\r\n    }\r\n  }\r\n]\r\n\r\nexport default PagesRoutes\r\n","import { lazy } from 'react'\r\n\r\nconst DashboardRoutes = [\r\n  // Dashboards\r\n  {\r\n    path: '/dashboard/analytics',\r\n    component: lazy(() => import('../../views/dashboard/analytics')),\r\n    exact: true\r\n  },\r\n  // {\r\n  //   path: '/dashboard/ecommerce',\r\n  //   component: lazy(() => import('../../views/dashboard/ecommerce')),\r\n  // }\r\n]\r\n\r\nexport default DashboardRoutes\r\n","// ** Routes Imports\r\n// import AppRoutes from './Apps'\r\n// import FormRoutes from './Forms'\r\nimport PagesRoutes from './Pages'\r\n// import TablesRoutes from './Tables'\r\n// import ChartMapsRoutes from './ChartsMaps'\r\nimport DashboardRoutes from './Dashboards'\r\n// import UiElementRoutes from './UiElements'\r\n// import ExtensionsRoutes from './Extensions'\r\n// import PageLayoutsRoutes from './PageLayouts'\r\n\r\n// ** Document title\r\nconst TemplateTitle = '%s - Vuexy React Admin Template'\r\n\r\n// ** Default Route\r\nconst DefaultRoute = '/dashboard/analytics'\r\n\r\n// ** Merge Routes\r\nconst Routes = [\r\n  ...DashboardRoutes,\r\n  // ...AppRoutes,\r\n  ...PagesRoutes,\r\n  // ...UiElementRoutes,\r\n  // ...ExtensionsRoutes,\r\n  // ...PageLayoutsRoutes,\r\n  // ...FormRoutes,\r\n  // ...TablesRoutes,\r\n  // ...ChartMapsRoutes\r\n]\r\n\r\nexport { DefaultRoute, TemplateTitle, Routes }\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Custom Hooks\r\nimport { useSkin } from '@hooks/useSkin'\r\n\r\nconst BlankLayout = ({ children, ...rest }) => {\r\n  // ** Hooks\r\n  const [skin, setSkin] = useSkin()\r\n\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    return () => setIsMounted(false)\r\n  }, [])\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className='blank-page'>\r\n      <div className='app-content content'>\r\n        <div className='content-wrapper'>\r\n          <div className='content-body'>{children}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlankLayout\r\n","// ** Icons Import\r\nimport { Heart } from 'react-feather'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <p className='clearfix mb-0'>\r\n      <span className='float-md-left d-block d-md-inline-block mt-25'>\r\n        COPYRIGHT © {new Date().getFullYear()}{' '}\r\n        <a onClick={(e) => { e.preventDefault() }} href='https://1.envato.market/pixinvent_portfolio' target='_blank' rel='noopener noreferrer'>\r\n          MakeFamousApp.com\r\n        </a>\r\n        <span className='d-none d-sm-inline-block'>, All rights Reserved</span>\r\n      </span>\r\n      <span className='float-md-right d-none d-md-block'>\r\n        Hand-crafted & Made with\r\n        <Heart size={14} />\r\n      </span>\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Utils\r\nimport { isUserLoggedIn } from '@utils'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch } from 'react-redux'\r\nimport { handleLogout } from '@store/actions/auth'\r\n\r\n// ** Third Party Components\r\nimport { UncontrolledDropdown, DropdownMenu, DropdownToggle, DropdownItem } from 'reactstrap'\r\nimport { Lock, Power } from 'react-feather'\r\n\r\n// ** Default Avatar Image\r\nimport defaultAvatar from '@src/assets/images/portrait/small/avatar-s-11.jpg'\r\n\r\nimport { injectIntl } from 'react-intl';\r\n\r\nconst UserDropdown = ({ intl }) => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n\r\n  // ** State\r\n  const [userData, setUserData] = useState(null)\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    if (isUserLoggedIn() !== null) {\r\n      setUserData(JSON.parse(localStorage.getItem('userData')))\r\n    }\r\n  }, [])\r\n\r\n  //** Vars\r\n  const userAvatar = (userData && userData.avatar) || defaultAvatar\r\n\r\n  return (\r\n    <UncontrolledDropdown tag='li' className='dropdown-user nav-item'>\r\n      <DropdownToggle href='/' tag='a' className='nav-link dropdown-user-link' onClick={e => e.preventDefault()}>\r\n        <div className='user-nav d-sm-flex d-none'>\r\n          <span className='user-name font-weight-bold'>{(userData && userData['username']) || 'John Doe'}</span>\r\n          <span className='user-status'>{(userData && userData.roleName) || 'Admin'}</span>\r\n        </div>\r\n        <Avatar img={userAvatar} imgHeight='40' imgWidth='40' status='online' />\r\n      </DropdownToggle>\r\n      <DropdownMenu right>\r\n        {/* <DropdownItem tag={Link} to='/pages/profile'>\r\n          <User size={14} className='mr-75' />\r\n          <span className='align-middle'>Profile</span>\r\n        </DropdownItem> */}\r\n        {/* <DropdownItem tag={Link} to='/apps/email'>\r\n          <Mail size={14} className='mr-75' />\r\n          <span className='align-middle'>Inbox</span>\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to='/apps/todo'>\r\n          <CheckSquare size={14} className='mr-75' />\r\n          <span className='align-middle'>Tasks</span>\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to='/apps/chat'>\r\n          <MessageSquare size={14} className='mr-75' />\r\n          <span className='align-middle'>Chats</span>\r\n        </DropdownItem>\r\n        <DropdownItem divider />\r\n        <DropdownItem tag={Link} to='/pages/account-settings'>\r\n          <Settings size={14} className='mr-75' />\r\n          <span className='align-middle'>Settings</span>\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to='/pages/pricing'>\r\n          <CreditCard size={14} className='mr-75' />\r\n          <span className='align-middle'>Pricing</span>\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to='/pages/faq'>\r\n          <HelpCircle size={14} className='mr-75' />\r\n          <span className='align-middle'>FAQ</span>\r\n        </DropdownItem> */}\r\n        <DropdownItem tag={Link} to='/user/change-password'>\r\n          <Lock size={14} className='mr-75' />\r\n          <span className='align-middle'>{\r\n            intl.formatMessage({id: 'changePass'})\r\n          }</span>\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to='/login' onClick={() => dispatch(handleLogout())}>\r\n          <Power size={14} className='mr-75' />\r\n          <span className='align-middle'>{\r\n            intl.formatMessage({id: 'logout'})\r\n          }</span>\r\n        </DropdownItem>\r\n      </DropdownMenu>\r\n    </UncontrolledDropdown>\r\n  )\r\n}\r\n\r\nexport default injectIntl(UserDropdown)\r\n","// ** Dropdowns Imports\r\n// import IntlDropdown from './IntlDropdown'\r\n// import CartDropdown from './CartDropdown'\r\nimport UserDropdown from './UserDropdown'\r\n// import NavbarSearch from './NavbarSearch'\r\n// import NotificationDropdown from './NotificationDropdown'\r\n\r\n// ** Third Party Components\r\nimport { Sun, Moon } from 'react-feather'\r\nimport { NavItem, NavLink } from 'reactstrap'\r\n\r\nconst NavbarUser = props => {\r\n  // ** Props\r\n  const { skin, setSkin } = props\r\n\r\n  // ** Function to toggle Theme (Light/Dark)\r\n  const ThemeToggler = () => {\r\n    if (skin === 'dark') {\r\n      return <Sun className='ficon' onClick={() => setSkin('light')} />\r\n    } else {\r\n      return <Moon className='ficon' onClick={() => setSkin('dark')} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ul className='nav navbar-nav align-items-center ml-auto'>\r\n      {/* <IntlDropdown /> */}\r\n      <NavItem className='d-none d-lg-block'>\r\n        <NavLink className='nav-link-style'>\r\n          <ThemeToggler />\r\n        </NavLink>\r\n      </NavItem>\r\n      {/* <NavbarSearch />\r\n      <CartDropdown />\r\n      <NotificationDropdown /> */}\r\n      <UserDropdown />\r\n    </ul>\r\n  )\r\n}\r\nexport default NavbarUser\r\n","// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport * as Icon from 'react-feather'\r\nimport classnames from 'classnames'\r\nimport Autocomplete from '@components/autocomplete'\r\nimport {\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledTooltip,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getBookmarks, updateBookmarked, handleSearchQuery } from '@store/actions/navbar'\r\n\r\nconst NavbarBookmarks = props => {\r\n  // ** Props\r\n  const { setMenuVisibility } = props\r\n\r\n  // ** State\r\n  const [value, setValue] = useState('')\r\n  const [openSearch, setOpenSearch] = useState(false)\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.navbar)\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    dispatch(getBookmarks())\r\n  }, [])\r\n\r\n  // ** Loops through Bookmarks Array to return Bookmarks\r\n  const renderBookmarks = () => {\r\n    if (store.bookmarks.length) {\r\n      return store.bookmarks\r\n        .map(item => {\r\n          const IconTag = Icon[item.icon]\r\n          return (\r\n            <NavItem key={item.target} className='d-none d-lg-block'>\r\n              <NavLink tag={Link} to={item.link} id={item.target}>\r\n                <IconTag className='ficon' />\r\n                <UncontrolledTooltip target={item.target}>{item.title}</UncontrolledTooltip>\r\n              </NavLink>\r\n            </NavItem>\r\n          )\r\n        })\r\n        .slice(0, 10)\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  // ** If user has more than 10 bookmarks then add the extra Bookmarks to a dropdown\r\n  const renderExtraBookmarksDropdown = () => {\r\n    if (store.bookmarks.length && store.bookmarks.length >= 11) {\r\n      return (\r\n        <NavItem className='d-none d-lg-block'>\r\n          <NavLink tag='span'>\r\n            <UncontrolledDropdown>\r\n              <DropdownToggle tag='span'>\r\n                <Icon.ChevronDown className='ficon' />\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                {store.bookmarks\r\n                  .map(item => {\r\n                    const IconTag = Icon[item.icon]\r\n                    return (\r\n                      <DropdownItem tag={Link} to={item.link} key={item.id}>\r\n                        <IconTag className='mr-50' size={14} />\r\n                        <span className='align-middle'>{item.title}</span>\r\n                      </DropdownItem>\r\n                    )\r\n                  })\r\n                  .slice(10)}\r\n              </DropdownMenu>\r\n\r\n            </UncontrolledDropdown>\r\n          </NavLink>\r\n        </NavItem>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  // ** Removes query in store\r\n  const handleClearQueryInStore = () => dispatch(handleSearchQuery(''))\r\n\r\n  // ** Loops through Bookmarks Array to return Bookmarks\r\n  const onKeyDown = e => {\r\n    if (e.keyCode === 27 || e.keyCode === 13) {\r\n      setTimeout(() => {\r\n        setOpenSearch(false)\r\n        handleClearQueryInStore()\r\n      }, 1)\r\n    }\r\n  }\r\n\r\n  // ** Function to toggle Bookmarks\r\n  const handleBookmarkUpdate = id => dispatch(updateBookmarked(id))\r\n\r\n  // ** Function to handle Bookmarks visibility\r\n  const handleBookmarkVisibility = () => {\r\n    setOpenSearch(!openSearch)\r\n    setValue('')\r\n    handleClearQueryInStore()\r\n  }\r\n\r\n  // ** Function to handle Input change\r\n  const handleInputChange = e => {\r\n    setValue(e.target.value)\r\n    dispatch(handleSearchQuery(e.target.value))\r\n  }\r\n\r\n  // ** Function to handle external Input click\r\n  const handleExternalClick = () => {\r\n    if (openSearch === true) {\r\n      setOpenSearch(false)\r\n      handleClearQueryInStore()\r\n    }\r\n  }\r\n\r\n  // ** Function to clear input value\r\n  const handleClearInput = setUserInput => {\r\n    if (!openSearch) {\r\n      setUserInput('')\r\n      handleClearQueryInStore()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ul className='navbar-nav d-xl-none'>\r\n        <NavItem className='mobile-menu mr-auto'>\r\n          <NavLink className='nav-menu-main menu-toggle hidden-xs is-active' onClick={() => setMenuVisibility(true)}>\r\n            <Icon.Menu className='ficon' />\r\n          </NavLink>\r\n        </NavItem>\r\n      </ul>\r\n      {/* <ul className='nav navbar-nav bookmark-icons'>\r\n        {renderBookmarks()}\r\n        {renderExtraBookmarksDropdown()}\r\n        <NavItem className='nav-item d-none d-lg-block'>\r\n          <NavLink className='bookmark-star' onClick={handleBookmarkVisibility}>\r\n            <Icon.Star className='ficon text-warning' />\r\n          </NavLink>\r\n          <div className={classnames('bookmark-input search-input', { show: openSearch })}>\r\n            <div className='bookmark-input-icon'>\r\n              <Icon.Search size={14} />\r\n            </div>\r\n            {openSearch && store.suggestions.length ? (\r\n              <Autocomplete\r\n                wrapperClass={classnames('search-list search-list-bookmark', {\r\n                  show: openSearch\r\n                })}\r\n                className='form-control'\r\n                suggestions={!value.length ? store.bookmarks : store.suggestions}\r\n                filterKey='title'\r\n                autoFocus={true}\r\n                defaultSuggestions\r\n                suggestionLimit={!value.length ? store.bookmarks.length : 6}\r\n                placeholder='Search...'\r\n                externalClick={handleExternalClick}\r\n                clearInput={(userInput, setUserInput) => handleClearInput(setUserInput)}\r\n                onKeyDown={onKeyDown}\r\n                value={value}\r\n                onChange={handleInputChange}\r\n                customRender={(\r\n                  item,\r\n                  i,\r\n                  filteredData,\r\n                  activeSuggestion,\r\n                  onSuggestionItemClick,\r\n                  onSuggestionItemHover\r\n                ) => {\r\n                  const IconTag = Icon[item.icon ? item.icon : 'X']\r\n                  return (\r\n                    <li\r\n                      key={i}\r\n                      onMouseEnter={() => onSuggestionItemHover(filteredData.indexOf(item))}\r\n                      className={classnames('suggestion-item d-flex align-items-center justify-content-between', {\r\n                        active: filteredData.indexOf(item) === activeSuggestion\r\n                      })}\r\n                    >\r\n                      <Link\r\n                        to={item.link}\r\n                        className='d-flex align-items-center justify-content-between p-0'\r\n                        onClick={() => {\r\n                          setOpenSearch(false)\r\n                          handleClearQueryInStore()\r\n                        }}\r\n                        style={{\r\n                          width: 'calc(90%)'\r\n                        }}\r\n                      >\r\n                        <div className='d-flex justify-content-start align-items-center overflow-hidden'>\r\n                          <IconTag size={17.5} className='mr-75' />\r\n                          <span className='text-truncate'>{item.title}</span>\r\n                        </div>\r\n                      </Link>\r\n                      <Icon.Star\r\n                        size={17.5}\r\n                        className={classnames('bookmark-icon float-right', {\r\n                          'text-warning': item.isBookmarked\r\n                        })}\r\n                        onClick={() => handleBookmarkUpdate(item.id)}\r\n                      />\r\n                    </li>\r\n                  )\r\n                }}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </NavItem>\r\n      </ul>\r\n     */}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default NavbarBookmarks\r\n","import axios from 'axios'\r\n\r\n// ** Get Bookmarks Array from @fakeDB\r\nexport const getBookmarks = () => {\r\n  return dispatch => {\r\n    return axios.get('/api/bookmarks/data').then(response => {\r\n      dispatch({\r\n        type: 'GET_BOOKMARKS',\r\n        data: response.data.suggestions,\r\n        bookmarks: response.data.bookmarks\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n// ** Update & Get Updated Bookmarks Array\r\nexport const updateBookmarked = id => {\r\n  return dispatch => {\r\n    return axios.post('/api/bookmarks/update', { id }).then(() => {\r\n      dispatch({ type: 'UPDATE_BOOKMARKED', id })\r\n    })\r\n  }\r\n}\r\n\r\n// ** Handle Bookmarks & Main Search Queries\r\nexport const handleSearchQuery = val => dispatch => dispatch({ type: 'HANDLE_SEARCH_QUERY', val })\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Custom Components\r\nimport NavbarUser from './NavbarUser'\r\nimport NavbarBookmarks from './NavbarBookmarks'\r\n\r\nconst ThemeNavbar = props => {\r\n  // ** Props\r\n  const { skin, setSkin, setMenuVisibility } = props\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='bookmark-wrapper d-flex align-items-center'>\r\n        <NavbarBookmarks setMenuVisibility={setMenuVisibility} />\r\n      </div>\r\n      <NavbarUser skin={skin} setSkin={setSkin} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ThemeNavbar\r\n","// @ts-nocheck\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport { User, Book, Shield, HardDrive, Cast, Image, Settings } from 'react-feather'\r\nexport default [\r\n  {\r\n    id: 'station',\r\n    title: 'stations',\r\n    icon: <HardDrive size={12} />,\r\n    permissions: [],\r\n    navLink: '/pages/station'\r\n  },\r\n  {\r\n    id: 'account-admin',\r\n    title: 'admin',\r\n    icon: <Shield size={12} />,\r\n    permissions: [],\r\n    navLink: '/pages/account-admin'\r\n  },\r\n  {\r\n    id: 'device',\r\n    title: 'devices',\r\n    icon: <Cast size={12} />,\r\n    permissions: [],\r\n    navLink: '/pages/devices'\r\n  },\r\n  {\r\n    id: 'user',\r\n    title: 'User',\r\n    icon: <User size={12} />,\r\n    permissions: [],\r\n    navLink: '/pages/users'\r\n  },\r\n  {\r\n    id: 'advertising',\r\n    title: 'advertising',\r\n    icon: <Image size={12} />,\r\n    permissions: [],\r\n    navLink: '/pages/advertising'\r\n  },\r\n  {\r\n    id: 'setting',\r\n    title: 'setting',\r\n    icon: <Settings size={12} />,\r\n    permissions: [],\r\n    navLink: '/pages/setting'\r\n  },\r\n]\r\n","// @ts-nocheck\r\nimport { Home, Circle } from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'dashboards',\r\n    title: 'home',\r\n    icon: <Home size={20} />,\r\n    badge: 'light-warning',\r\n    navLink: '/dashboard/analytics',\r\n    permissions: []\r\n  }\r\n]\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n// ** Navigation sections imports\r\n\r\nimport pages from './pages'\r\n\r\nimport dashboards from './dashboards'\r\n\r\n\r\n// ** Merge & Export\r\nexport default [...dashboards, ...pages]\r\n","// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport { Disc, X, Circle } from 'react-feather'\r\n\r\n// ** Config\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nconst VerticalMenuHeader = props => {\r\n  // ** Props\r\n  const { menuCollapsed, setMenuCollapsed, setMenuVisibility, setGroupOpen, menuHover } = props\r\n\r\n  // ** Reset open group\r\n  useEffect(() => {\r\n    if (!menuHover && menuCollapsed) setGroupOpen([])\r\n  }, [menuHover, menuCollapsed])\r\n\r\n  // ** Menu toggler component\r\n  const Toggler = () => {\r\n    if (!menuCollapsed) {\r\n      return (\r\n        <Disc\r\n          size={20}\r\n          data-tour='toggle-icon'\r\n          className='text-primary toggle-icon d-none d-xl-block'\r\n          onClick={() => setMenuCollapsed(true)}\r\n        />\r\n      )\r\n    } else {\r\n      return (\r\n        <Circle\r\n          size={20}\r\n          data-tour='toggle-icon'\r\n          className='text-primary toggle-icon d-none d-xl-block'\r\n          onClick={() => setMenuCollapsed(false)}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='navbar-header'>\r\n      <ul className='nav navbar-nav flex-row'>\r\n        <li className='nav-item mr-auto'>\r\n          <NavLink to='/' className='navbar-brand'>\r\n            <span className='brand-logo'>\r\n              <img src={themeConfig.app.appLogoImage} alt='logo' />\r\n            </span>\r\n            <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\r\n          </NavLink>\r\n        </li>\r\n        <li className='nav-item nav-toggle'>\r\n          <div className='nav-link modern-nav-toggle cursor-pointer'>\r\n            <Toggler />\r\n            <X onClick={() => setMenuVisibility(false)} className='toggle-icon icon-x d-block d-xl-none' size={20} />\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VerticalMenuHeader\r\n","// ** React Imports\r\nimport { useContext } from 'react'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\n\r\n/**\r\n * Return which component to render based on it's data/context\r\n * @param {Object} item nav menu item\r\n */\r\nexport const resolveVerticalNavMenuItemComponent = item => {\r\n  if (item.header) return 'VerticalNavMenuSectionHeader'\r\n  if (item.children) return 'VerticalNavMenuGroup'\r\n  return 'VerticalNavMenuLink'\r\n}\r\n\r\n/**\r\n * Return which component to render based on it's data/context\r\n * @param {Object} item nav menu item\r\n */\r\nexport const resolveHorizontalNavMenuItemComponent = item => {\r\n  if (item.children) return 'HorizontalNavMenuGroup'\r\n  return 'HorizontalNavMenuLink'\r\n}\r\n\r\n/**\r\n * Check if nav-link is active\r\n * @param {Object} link nav-link object\r\n */\r\n// export const isNavLinkActive = (link, currentURL, match) => {\r\n//   // return currentURL === link || (URLParams && Object.keys(URLParams).length && currentURLFilter === item.navLink)\r\n//   const getFirstObjProp = obj => obj[Object.keys(obj)[0]]\r\n//   return (\r\n//     currentURL === link ||\r\n//     (match !== null && match !== undefined && match.url === `${link}/${getFirstObjProp(match.params)}`)\r\n//   )\r\n// }\r\n\r\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\r\n  return (\r\n    currentURL === link ||\r\n    (routerProps && routerProps.meta && routerProps.meta.navLink && routerProps.meta.navLink === link)\r\n  )\r\n  // return currentURL === link\r\n}\r\n\r\n/**\r\n * Check if nav group is\r\n * @param {Array} children Group children\r\n */\r\n// export const isNavGroupActive = (children, currentURL, match) => {\r\n//   return children.some(child => {\r\n//     // If child have children => It's group => Go deeper(recursive)\r\n//     if (child.children) {\r\n//       return isNavGroupActive(child.children, currentURL, match)\r\n//     }\r\n//     // else it's link => Check for matched Route\r\n//     return isNavLinkActive(child.navLink, currentURL, match)\r\n//   })\r\n// }\r\nexport const isNavGroupActive = (children, currentURL, routerProps) => {\r\n  return children.some(child => {\r\n    // If child have children => It's group => Go deeper(recursive)\r\n    if (child.children) {\r\n      return isNavGroupActive(child.children, currentURL, routerProps)\r\n    }\r\n    // else it's link => Check for matched Route\r\n    return isNavLinkActive(child.navLink, currentURL, routerProps)\r\n  })\r\n}\r\n\r\n/**\r\n * Search for parent object\r\n * @param {Array} navigation Group children\r\n * @param {string} currentURL current URL\r\n */\r\n// export const search = (navigation, currentURL, match) => {\r\n//   let result\r\n//   navigation.some(child => {\r\n//     let children\r\n//     // If child have children => It's group => Go deeper(recursive)\r\n//     if (child.children && (children = search(child.children, currentURL, match))) {\r\n//       return (result = {\r\n//         id: child.id,\r\n//         children\r\n//       })\r\n//     }\r\n\r\n//     // else it's link => Check for matched Route\r\n//     if (isNavLinkActive(child.navLink, currentURL, match)) {\r\n//       return (result = {\r\n//         id: child.id\r\n//       })\r\n//     }\r\n//   })\r\n//   return result\r\n// }\r\n\r\nexport const search = (navigation, currentURL, routerProps) => {\r\n  let result\r\n  navigation.some(child => {\r\n    let children\r\n    // If child have children => It's group => Go deeper(recursive)\r\n    if (child.children && (children = search(child.children, currentURL, routerProps))) {\r\n      return (result = {\r\n        id: child.id,\r\n        children\r\n      })\r\n    }\r\n\r\n    // else it's link => Check for matched Route\r\n    if (isNavLinkActive(child.navLink, currentURL, routerProps)) {\r\n      return (result = {\r\n        id: child.id\r\n      })\r\n    }\r\n  })\r\n  return result\r\n}\r\n\r\n/**\r\n * Loop through nested object\r\n * @param {object} obj nested object\r\n */\r\nexport const getAllParents = (obj, match) => {\r\n  const res = []\r\n  const recurse = (obj, current) => {\r\n    for (const key in obj) {\r\n      const value = obj[key]\r\n      if (value !== undefined) {\r\n        if (value && typeof value === 'object') {\r\n          recurse(value, key)\r\n        } else {\r\n          if (key === match) {\r\n            res.push(value)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  recurse(obj)\r\n  return res\r\n}\r\n\r\nexport const canViewMenuGroup = item => {\r\n  // const ability = useContext(AbilityContext)\r\n  // // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\r\n  // const hasAnyVisibleChild = item.children && item.children.some(i => ability.can(i.action, i.resource))\r\n\r\n  // // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\r\n  // // ** Else check for ability using provided resource and action along with checking if has any visible child\r\n  // if (!(item.action && item.resource)) {\r\n  //   return hasAnyVisibleChild\r\n  // }\r\n  // return ability.can(item.action, item.resource) && hasAnyVisibleChild\r\n  return true\r\n}\r\n\r\nexport const canViewMenuItem = item => {\r\n  // const ability = useContext(AbilityContext)\r\n  // return ability.can(item.action, item.resource)\r\n  const userData = JSON.parse(localStorage.getItem('userData') || `{}`)\r\n  const { permissions } = userData\r\n\r\n  const arrayPers = !permissions || permissions === '' ? [] : permissions.split(',')\r\n  const permissionsCheck = item.permissions || []\r\n  let check = true\r\n  // permissionsCheck.forEach(element => {\r\n  //   const index = arrayPers.findIndex(el2 => el2 === element)\r\n  //   if (index !== -1) {\r\n  //     check = true\r\n  //   }\r\n  // });\r\n\r\n  return check\r\n}\r\n","// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { NavLink, useLocation, matchPath, useParams } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport { Badge } from 'reactstrap'\r\nimport classnames from 'classnames'\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\n// ** Vertical Menu Array Of Items\r\nimport navigation from '@src/navigation/vertical'\r\n\r\n// ** Utils\r\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils'\r\n\r\nconst VerticalNavMenuLink = ({\r\n  item,\r\n  groupActive,\r\n  setGroupActive,\r\n  activeItem,\r\n  setActiveItem,\r\n  groupOpen,\r\n  setGroupOpen,\r\n  toggleActiveGroup,\r\n  parentItem,\r\n  routerProps,\r\n  currentActiveItem\r\n}) => {\r\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\r\n  const LinkTag = item.externalLink ? 'a' : NavLink\r\n\r\n  // ** URL Vars\r\n  const location = useLocation()\r\n  const currentURL = location.pathname\r\n\r\n  // ** To match path\r\n  const match = matchPath(currentURL, {\r\n    path: `${item.navLink}/:param`,\r\n    exact: true,\r\n    strict: false\r\n  })\r\n\r\n  // ** Search for current item parents\r\n  const searchParents = (navigation, currentURL) => {\r\n    const parents = search(navigation, currentURL, routerProps) // Search for parent object\r\n    const allParents = getAllParents(parents, 'id') // Parents Object to Parents Array\r\n    return allParents\r\n  }\r\n\r\n  // ** URL Vars\r\n  const resetActiveGroup = navLink => {\r\n    const parents = search(navigation, navLink, match)\r\n    toggleActiveGroup(item.id, parents)\r\n  }\r\n\r\n  // ** Reset Active & Open Group Arrays\r\n  const resetActiveAndOpenGroups = () => {\r\n    setGroupActive([])\r\n    setGroupOpen([])\r\n  }\r\n\r\n  // ** Checks url & updates active item\r\n  useEffect(() => {\r\n    if (currentActiveItem !== null) {\r\n      setActiveItem(currentActiveItem)\r\n      const arr = searchParents(navigation, currentURL)\r\n      setGroupActive([...arr])\r\n    }\r\n  }, [location])\r\n\r\n  return (\r\n    <li\r\n      className={classnames({\r\n        'nav-item': !item.children,\r\n        disabled: item.disabled,\r\n        active: item.navLink === activeItem\r\n      })}\r\n    >\r\n      <LinkTag\r\n        className='d-flex align-items-center'\r\n        target={item.newTab ? '_blank' : undefined}\r\n        /*eslint-disable */\r\n        {...(item.externalLink === true\r\n          ? {\r\n              href: item.navLink || '/'\r\n            }\r\n          : {\r\n              to: item.navLink || '/',\r\n              isActive: (match, location) => {\r\n                if (!match) {\r\n                  return false\r\n                }\r\n\r\n                if (match.url && match.url !== '' && match.url === item.navLink) {\r\n                  currentActiveItem = item.navLink\r\n                }\r\n              }\r\n            })}\r\n        /*eslint-enable */\r\n        onClick={e => {\r\n          if (!item.navLink.length) {\r\n            e.preventDefault()\r\n          }\r\n          parentItem ? resetActiveGroup(item.navLink) : resetActiveAndOpenGroups()\r\n        }}\r\n      >\r\n        {item.icon}\r\n        <span className='menu-item text-truncate'>\r\n          <FormattedMessage id={item.title} />\r\n        </span>\r\n\r\n        {item.badge && item.badgeText ? (\r\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\r\n            {item.badgeText}\r\n          </Badge>\r\n        ) : null}\r\n      </LinkTag>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuLink\r\n","// ** React Imports\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { Collapse, Badge } from 'reactstrap'\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\n// ** Vertical Menu Items Component\r\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\r\n\r\n// ** Utils\r\nimport { isNavGroupActive, getAllParents } from '@layouts/utils'\r\n\r\nconst VerticalNavMenuGroup = ({\r\n  item,\r\n  groupActive,\r\n  setGroupActive,\r\n  activeItem,\r\n  setActiveItem,\r\n  groupOpen,\r\n  setGroupOpen,\r\n  parentItem,\r\n  menuCollapsed,\r\n  menuHover,\r\n  routerProps,\r\n  currentActiveItem\r\n}) => {\r\n  // ** Current Val\r\n  const currentURL = useLocation().pathname\r\n\r\n  // ** Toggles Open Group\r\n  const toggleOpenGroup = (item, parentItem) => {\r\n    let openArr = groupOpen\r\n    let allParents\r\n\r\n    if (parentItem) {\r\n      allParents = getAllParents(parentItem, 'id')\r\n      allParents.pop()\r\n    }\r\n\r\n    // ** If user clicked on menu group inside already opened group i.g. when user click on blog group inside pages group\r\n    if (groupOpen && allParents && groupOpen[0] === allParents[0]) {\r\n      groupOpen.includes(item) ? openArr.splice(openArr.indexOf(item), 1) : openArr.push(item)\r\n    } else {\r\n      openArr = []\r\n      if (!groupOpen.includes(item)) {\r\n        openArr.push(item)\r\n      }\r\n    }\r\n\r\n    // ** Set Open Group\r\n    setGroupOpen([...openArr])\r\n  }\r\n\r\n  // ** Toggle Active Group\r\n  const toggleActiveGroup = (item, parentItem) => {\r\n    let activeArr = groupActive\r\n    let allParents\r\n\r\n    if (parentItem) {\r\n      allParents = getAllParents(parentItem, 'id')\r\n      activeArr = allParents\r\n    } else {\r\n      activeArr.includes(item) ? activeArr.splice(activeArr.indexOf(item), 1) : activeArr.push(item)\r\n    }\r\n\r\n    // ** Set open group removing any activegroup item present in opengroup state\r\n    const openArr = groupOpen.filter(val => !activeArr.includes(val))\r\n    setGroupOpen([...openArr])\r\n\r\n    // **  Set Active Group\r\n    setGroupActive([...activeArr])\r\n  }\r\n\r\n  // ** On Group Item Click\r\n  const onCollapseClick = (e, item) => {\r\n    if ((groupActive && groupActive.includes(item.id)) || isNavGroupActive(item.children, currentURL, routerProps)) {\r\n      toggleActiveGroup(item.id)\r\n    } else {\r\n      toggleOpenGroup(item.id, parentItem)\r\n    }\r\n\r\n    e.preventDefault()\r\n  }\r\n\r\n  // ** Returns condition to add open class\r\n  const openClassCondition = id => {\r\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\r\n      if (groupActive.includes(id) || groupOpen.includes(item.id)) {\r\n        return true\r\n      }\r\n    } else if (groupActive.includes(id) && menuCollapsed && menuHover === false) {\r\n      return false\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={classnames('nav-item has-sub', {\r\n        open: openClassCondition(item.id),\r\n        'menu-collapsed-open': groupActive.includes(item.id),\r\n        'sidebar-group-active': groupActive.includes(item.id) || groupOpen.includes(item.id)\r\n      })}\r\n    >\r\n      <Link className='d-flex align-items-center' to='/' onClick={e => onCollapseClick(e, item)}>\r\n        {item.icon}\r\n        <span className='menu-title text-truncate'>\r\n          <FormattedMessage id={item.title} />\r\n        </span>\r\n\r\n        {item.badge && item.badgeText ? (\r\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\r\n            {item.badgeText}\r\n          </Badge>\r\n        ) : null}\r\n      </Link>\r\n\r\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\r\n      <ul className='menu-content'>\r\n        <Collapse isOpen={(groupActive && groupActive.includes(item.id)) || (groupOpen && groupOpen.includes(item.id))}>\r\n          <VerticalNavMenuItems\r\n            items={item.children}\r\n            groupActive={groupActive}\r\n            setGroupActive={setGroupActive}\r\n            groupOpen={groupOpen}\r\n            setGroupOpen={setGroupOpen}\r\n            toggleActiveGroup={toggleActiveGroup}\r\n            parentItem={item}\r\n            menuCollapsed={menuCollapsed}\r\n            menuHover={menuHover}\r\n            routerProps={routerProps}\r\n            currentActiveItem={currentActiveItem}\r\n            activeItem={activeItem}\r\n            setActiveItem={setActiveItem}\r\n          />\r\n        </Collapse>\r\n      </ul>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuGroup\r\n","// ** Third Party Components\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { MoreHorizontal } from 'react-feather'\r\n\r\nconst VerticalNavMenuSectionHeader = ({ item, index }) => {\r\n  return (\r\n    <li className='navigation-header'>\r\n      <span>\r\n        <FormattedMessage id={item.header} />\r\n      </span>\r\n      <MoreHorizontal className='feather-more-horizontal' />\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuSectionHeader\r\n","// ** React Imports\r\nimport { useContext } from 'react'\r\n\r\n// ** Vertical Menu Components\r\nimport VerticalNavMenuLink from './VerticalNavMenuLink'\r\nimport VerticalNavMenuGroup from './VerticalNavMenuGroup'\r\nimport VerticalNavMenuSectionHeader from './VerticalNavMenuSectionHeader'\r\n\r\n// ** Ability Context\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\n\r\n// ** Utils\r\nimport {\r\n  resolveVerticalNavMenuItemComponent as resolveNavItemComponent,\r\n  canViewMenuGroup,\r\n  canViewMenuItem\r\n} from '@layouts/utils'\r\n\r\nconst VerticalMenuNavItems = props => {\r\n  // ** Context\r\n  const ability = useContext(AbilityContext)\r\n\r\n  // ** Components Object\r\n  const Components = {\r\n    VerticalNavMenuSectionHeader,\r\n    VerticalNavMenuGroup,\r\n    VerticalNavMenuLink\r\n  }\r\n\r\n  // ** Render Nav Menu Items\r\n  const RenderNavItems = props.items.map((item, index) => {\r\n    // console.log(item, 24234)\r\n    const TagName = Components[resolveNavItemComponent(item)]\r\n    if (item.children) {\r\n      return canViewMenuGroup(item) && <TagName item={item} index={index} key={item.id} {...props} />\r\n    }\r\n\r\n    return canViewMenuItem(item) && <TagName key={item.id || item.header} item={item} {...props} />\r\n  })\r\n\r\n  return RenderNavItems\r\n}\r\n\r\nexport default VerticalMenuNavItems\r\n","// ** React Imports\r\nimport { Fragment, useState, useRef } from 'react'\r\n\r\n// ** Vertical Menu Items Array\r\nimport navigation from '@src/navigation/vertical'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\n// ** Vertical Menu Components\r\nimport VerticalMenuHeader from './VerticalMenuHeader'\r\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\r\n\r\nconst Sidebar = props => {\r\n  // ** Props\r\n  const { menuCollapsed, routerProps, menu, currentActiveItem, skin } = props\r\n\r\n  // ** States\r\n  const [groupOpen, setGroupOpen] = useState([])\r\n  const [groupActive, setGroupActive] = useState([])\r\n  const [activeItem, setActiveItem] = useState(null)\r\n\r\n  // ** Menu Hover State\r\n  const [menuHover, setMenuHover] = useState(false)\r\n\r\n  // ** Ref\r\n  const shadowRef = useRef(null)\r\n\r\n  // ** Function to handle Mouse Enter\r\n  const onMouseEnter = () => {\r\n    if (menuCollapsed) {\r\n      setMenuHover(true)\r\n    }\r\n  }\r\n\r\n  // ** Scroll Menu\r\n  const scrollMenu = container => {\r\n    if (shadowRef && container.scrollTop > 0) {\r\n      if (!shadowRef.current.classList.contains('d-block')) {\r\n        shadowRef.current.classList.add('d-block')\r\n      }\r\n    } else {\r\n      if (shadowRef.current.classList.contains('d-block')) {\r\n        shadowRef.current.classList.remove('d-block')\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={classnames('main-menu menu-fixed menu-accordion menu-shadow', {\r\n          expanded: menuHover || menuCollapsed === false,\r\n          'menu-light': skin !== 'semi-dark' && skin !== 'dark',\r\n          'menu-dark': skin === 'semi-dark' || skin === 'dark'\r\n        })}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={() => setMenuHover(false)}\r\n      >\r\n        {menu ? (\r\n          menu\r\n        ) : (\r\n            <Fragment>\r\n              {/* Vertical Menu Header */}\r\n              <VerticalMenuHeader setGroupOpen={setGroupOpen} menuHover={menuHover} {...props} />\r\n              {/* Vertical Menu Header Shadow */}\r\n              <div className='shadow-bottom' ref={shadowRef}></div>\r\n              {/* Perfect Scrollbar */}\r\n              <PerfectScrollbar\r\n                className='main-menu-content'\r\n                options={{ wheelPropagation: false }}\r\n                onScrollY={container => scrollMenu(container)}\r\n              >\r\n                <ul className='navigation navigation-main'>\r\n                  <VerticalNavMenuItems\r\n                    items={navigation}\r\n                    groupActive={groupActive}\r\n                    setGroupActive={setGroupActive}\r\n                    activeItem={activeItem}\r\n                    setActiveItem={setActiveItem}\r\n                    groupOpen={groupOpen}\r\n                    setGroupOpen={setGroupOpen}\r\n                    routerProps={routerProps}\r\n                    menuCollapsed={menuCollapsed}\r\n                    menuHover={menuHover}\r\n                    currentActiveItem={currentActiveItem}\r\n                  />\r\n                </ul>\r\n              </PerfectScrollbar>\r\n            </Fragment>\r\n          )}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","// ** React Imports\r\nimport { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { handleMenuCollapsed, handleContentWidth, handleMenuHidden } from '@store/actions/layout'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { ArrowUp } from 'react-feather'\r\nimport ScrollToTop from 'react-scroll-up'\r\nimport { Navbar, Button } from 'reactstrap'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\n// ** Custom Components\r\nimport Customizer from '@components/customizer'\r\nimport FooterComponent from './components/footer'\r\nimport NavbarComponent from './components/navbar'\r\nimport SidebarComponent from './components/menu/vertical-menu'\r\n\r\n// ** Custom Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport { useNavbarType } from '@hooks/useNavbarType'\r\nimport { useFooterType } from '@hooks/useFooterType'\r\nimport { useNavbarColor } from '@hooks/useNavbarColor'\r\n\r\n// ** Styles\r\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss'\r\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss'\r\n\r\nconst VerticalLayout = props => {\r\n  // ** Props\r\n  const { children, navbar, footer, menu, routerProps, currentActiveItem } = props\r\n\r\n  // ** Hooks\r\n  const [skin, setSkin] = useSkin()\r\n  const [isRtl, setIsRtl] = useRTL()\r\n  const [navbarType, setNavbarType] = useNavbarType()\r\n  const [footerType, setFooterType] = useFooterType()\r\n  const [navbarColor, setNavbarColor] = useNavbarColor()\r\n\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n  const [menuVisibility, setMenuVisibility] = useState(false)\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const layoutStore = useSelector(state => state.layout)\r\n\r\n  // ** Update Window Width\r\n  const handleWindowWidth = () => {\r\n    setWindowWidth(window.innerWidth)\r\n  }\r\n\r\n  // ** Vars\r\n  const location = useLocation()\r\n  const contentWidth = layoutStore.contentWidth\r\n  const menuCollapsed = layoutStore.menuCollapsed\r\n  const isHidden = layoutStore.menuHidden\r\n\r\n  // ** Toggles Menu Collapsed\r\n  const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val))\r\n\r\n  // ** Handles Content Width\r\n  const setContentWidth = val => dispatch(handleContentWidth(val))\r\n\r\n  // ** Handles Content Width\r\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\r\n\r\n  //** This function will detect the Route Change and will hide the menu on menu item click\r\n  useEffect(() => {\r\n    if (menuVisibility && windowWidth < 1200) {\r\n      setMenuVisibility(false)\r\n    }\r\n  }, [location])\r\n\r\n  //** Sets Window Size & Layout Props\r\n  useEffect(() => {\r\n    if (window !== undefined) {\r\n      window.addEventListener('resize', handleWindowWidth)\r\n    }\r\n  }, [windowWidth])\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    return () => setIsMounted(false)\r\n  }, [])\r\n\r\n  // ** Vars\r\n  const footerClasses = {\r\n    static: 'footer-static',\r\n    sticky: 'footer-fixed',\r\n    hidden: 'footer-hidden'\r\n  }\r\n\r\n  const navbarWrapperClasses = {\r\n    floating: 'navbar-floating',\r\n    sticky: 'navbar-sticky',\r\n    static: 'navbar-static',\r\n    hidden: 'navbar-hidden'\r\n  }\r\n\r\n  const navbarClasses = {\r\n    floating: 'floating-nav',\r\n    sticky: 'fixed-top',\r\n    static: 'navbar-static-top',\r\n    hidden: 'd-none'\r\n  }\r\n\r\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        `wrapper vertical-layout ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\r\n          footerClasses[footerType] || 'footer-static'\r\n        }`,\r\n        {\r\n          // Modern Menu\r\n          'vertical-menu-modern': windowWidth >= 1200,\r\n          'menu-collapsed': menuCollapsed && windowWidth >= 1200,\r\n          'menu-expanded': !menuCollapsed && windowWidth > 1200,\r\n\r\n          // Overlay Menu\r\n          'vertical-overlay-menu': windowWidth < 1200,\r\n          'menu-hide': !menuVisibility && windowWidth < 1200,\r\n          'menu-open': menuVisibility && windowWidth < 1200\r\n        }\r\n      )}\r\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\r\n    >\r\n      {!isHidden ? (\r\n        <SidebarComponent\r\n          skin={skin}\r\n          menu={menu}\r\n          menuCollapsed={menuCollapsed}\r\n          menuVisibility={menuVisibility}\r\n          setMenuCollapsed={setMenuCollapsed}\r\n          setMenuVisibility={setMenuVisibility}\r\n          routerProps={routerProps}\r\n          currentActiveItem={currentActiveItem}\r\n        />\r\n      ) : null}\r\n\r\n      <Navbar\r\n        expand='lg'\r\n        light={skin !== 'dark'}\r\n        dark={skin === 'dark' || bgColorCondition}\r\n        color={bgColorCondition ? navbarColor : undefined}\r\n        className={classnames(\r\n          `header-navbar navbar align-items-center ${navbarClasses[navbarType] || 'floating-nav'} navbar-shadow`\r\n        )}\r\n      >\r\n        <div className='navbar-container d-flex content'>\r\n          {navbar ? navbar : <NavbarComponent setMenuVisibility={setMenuVisibility} skin={skin} setSkin={setSkin} />}\r\n        </div>\r\n      </Navbar>\r\n      {children}\r\n\r\n      {/* Vertical Nav Menu Overlay */}\r\n      <div\r\n        className={classnames('sidenav-overlay', {\r\n          show: menuVisibility\r\n        })}\r\n        onClick={() => setMenuVisibility(false)}\r\n      ></div>\r\n      <footer\r\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\r\n          'd-none': footerType === 'hidden'\r\n        })}\r\n      >\r\n        {footer ? footer : <FooterComponent footerType={footerType} footerClasses={footerClasses} />}\r\n      </footer>\r\n\r\n      {themeConfig.layout.scrollTop === true ? (\r\n        <div className='scroll-to-top'>\r\n          <ScrollToTop showUnder={300} style={{ bottom: '5%' }}>\r\n            <Button className='btn-icon' color='primary'>\r\n              <ArrowUp size={14} />\r\n            </Button>\r\n          </ScrollToTop>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VerticalLayout\r\n","//** React Imports\r\nimport { useEffect } from 'react'\r\n\r\n// ** Store & Actions\r\nimport { handleRTL } from '@store/actions/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useRTL = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const isRtl = useSelector(state => state.layout.isRTL)\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(isRtl) : value\r\n      dispatch(handleRTL(valueToStore))\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get HTML Tag\r\n    const element = document.getElementsByTagName('html')[0]\r\n\r\n    // ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\r\n    if (isRtl) {\r\n      element.setAttribute('dir', 'rtl')\r\n    } else {\r\n      element.setAttribute('dir', 'ltr')\r\n    }\r\n  }, [isRtl])\r\n\r\n  return [isRtl, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useNavbarType = () => {\r\n  // ** State\r\n  const [navbarType, setNavbarType] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.navbar.type\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.navbar.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(navbarType) : value\r\n\r\n      // ** Set state\r\n      setNavbarType(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [navbarType, setValue]\r\n}\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useFooterType = () => {\r\n  // ** State\r\n  const [footerType, setFooterType] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.footer.type\r\n    } catch (error) {\r\n      // ** If error also initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.footer.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(footerType) : value\r\n\r\n      // ** Set state\r\n      setFooterType(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [footerType, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useNavbarColor = () => {\r\n  // ** State\r\n  const [navbarColor, setNavbarColor] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.navbar.backgroundColor\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.navbar.backgroundColor\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(navbarColor) : value\r\n\r\n      // ** Set state\r\n      setNavbarColor(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [navbarColor, setValue]\r\n}\r\n","// !Do not remove the Layout import\r\nimport Layout from '@layouts/VerticalLayout'\r\n\r\nconst VerticalLayout = props => <Layout {...props}>{props.children}</Layout>\r\n\r\nexport default VerticalLayout\r\n","// ** React Imports\r\nimport { Suspense, useContext, lazy } from 'react'\r\n\r\n// ** Utils\r\nimport { isUserLoggedIn } from '@utils'\r\nimport { useLayout } from '@hooks/useLayout'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\nimport { useRouterTransition } from '@hooks/useRouterTransition'\r\n\r\n// ** Custom Components\r\n// import Spinner from '@components/spinner/Loading-spinner' // Uncomment if your require content fallback\r\nimport LayoutWrapper from '@layouts/components/layout-wrapper'\r\n\r\n// ** Router Components\r\nimport { BrowserRouter as AppRouter, Route, Switch, Redirect } from 'react-router-dom'\r\n\r\n// ** Routes & Default Routes\r\nimport { DefaultRoute, Routes } from './routes'\r\n\r\n// ** Layouts\r\nimport BlankLayout from '@layouts/BlankLayout'\r\nimport VerticalLayout from '@src/layouts/VerticalLayout'\r\n// import HorizontalLayout from '@src/layouts/HorizontalLayout'\r\n\r\nconst Router = () => {\r\n  // ** Hooks\r\n  const [layout, setLayout] = useLayout()\r\n  const [transition, setTransition] = useRouterTransition()\r\n\r\n  // ** ACL Ability Context\r\n  const ability = useContext(AbilityContext)\r\n\r\n  // ** Default Layout\r\n  const DefaultLayout = 'VerticalLayout'\r\n\r\n  // ** All of the available layouts\r\n  const Layouts = { VerticalLayout, BlankLayout }\r\n\r\n  // ** Current Active Item\r\n  const currentActiveItem = null\r\n\r\n  // ** Return Filtered Array of Routes & Paths\r\n  const LayoutRoutesAndPaths = layout => {\r\n    const LayoutRoutes = []\r\n    const LayoutPaths = []\r\n\r\n    if (Routes) {\r\n      Routes.filter(route => {\r\n        // ** Checks if Route layout or Default layout matches current layout\r\n        if (route.layout === layout || (route.layout === undefined && DefaultLayout === layout)) {\r\n\r\n          LayoutRoutes.push(route)\r\n          LayoutPaths.push(route.path)\r\n\r\n\r\n        }\r\n      })\r\n    }\r\n\r\n    return { LayoutRoutes, LayoutPaths }\r\n  }\r\n\r\n  const NotAuthorized = lazy(() => import('@src/views/pages/misc/NotAuthorized'))\r\n\r\n  // ** Init Error Component\r\n  const Error = lazy(() => import('@src/views/pages/misc/Error'))\r\n\r\n  /**\r\n   ** Final Route Component Checks for Login & User Role and then redirects to the route\r\n   */\r\n  const FinalRoute = props => {\r\n    const route = props.route\r\n    let action, resource\r\n    // console.log(ability, resource)\r\n    // ** Assign vars based on route meta\r\n    if (route.meta) {\r\n      action = route.meta.action ? route.meta.action : null\r\n      resource = route.meta.resource ? route.meta.resource : null\r\n    }\r\n\r\n\r\n    if (\r\n      (!isUserLoggedIn() && route.meta === undefined) ||\r\n      (!isUserLoggedIn() && route.meta && !route.meta.authRoute && !route.meta.publicRoute)\r\n    ) {\r\n      /**\r\n       ** If user is not Logged in & route meta is undefined\r\n       ** OR\r\n       ** If user is not Logged in & route.meta.authRoute, !route.meta.publicRoute are undefined\r\n       ** Then redirect user to login\r\n       */\r\n\r\n      return <Redirect to='/login' />\r\n    } else if (route.meta && route.meta.authRoute && isUserLoggedIn()) {\r\n      // ** If route has meta and authRole and user is Logged in then redirect user to home page (DefaultRoute)\r\n      return <Redirect to='/' />\r\n\r\n    }\r\n    // else if (isUserLoggedIn() && !ability.can(action || 'read', resource)) {\r\n    //   // ** If user is Logged in and doesn't have ability to visit the page redirect the user to Not Authorized\r\n    //   return <Redirect to='/misc/not-authorized' />\r\n    // }\r\n    else {\r\n      // ** If none of the above render component\r\n      return <route.component {...props} />\r\n    }\r\n  }\r\n\r\n  // ** Return Route to Render\r\n  const ResolveRoutes = () => {\r\n    return Object.keys(Layouts).map((layout, index) => {\r\n      // ** Convert Layout parameter to Layout Component\r\n      // ? Note: make sure to keep layout and component name equal\r\n\r\n      const LayoutTag = Layouts[layout]\r\n\r\n      // ** Get Routes and Paths of the Layout\r\n      const { LayoutRoutes, LayoutPaths } = LayoutRoutesAndPaths(layout)\r\n\r\n      // ** We have freedom to display different layout for different route\r\n      // ** We have made LayoutTag dynamic based on layout, we can also replace it with the only layout component,\r\n      // ** that we want to implement like VerticalLayout or HorizontalLayout\r\n      // ** We segregated all the routes based on the layouts and Resolved all those routes inside layouts\r\n\r\n      // ** RouterProps to pass them to Layouts\r\n      const routerProps = {}\r\n\r\n      return (\r\n        <Route path={LayoutPaths} key={index}>\r\n          <LayoutTag\r\n            routerProps={routerProps}\r\n            layout={layout}\r\n            setLayout={setLayout}\r\n            transition={transition}\r\n            setTransition={setTransition}\r\n            currentActiveItem={currentActiveItem}\r\n          >\r\n            <Switch>\r\n              {LayoutRoutes.map(route => {\r\n                return (\r\n                  <Route\r\n                    key={route.path}\r\n                    path={route.path}\r\n                    exact={route.exact === true}\r\n                    render={props => {\r\n                      // ** Assign props to routerProps\r\n                      Object.assign(routerProps, {\r\n                        ...props,\r\n                        meta: route.meta\r\n                      })\r\n\r\n                      return (\r\n                        <Suspense fallback={null}>\r\n                          {/* Layout Wrapper to add classes based on route's layout, appLayout and className */}\r\n                          <LayoutWrapper\r\n                            layout={DefaultLayout}\r\n                            transition={transition}\r\n                            setTransition={setTransition}\r\n                            /* Conditional props */\r\n                            /*eslint-disable */\r\n                            {...(route.appLayout\r\n                              ? {\r\n                                appLayout: route.appLayout\r\n                              }\r\n                              : {})}\r\n                            {...(route.meta\r\n                              ? {\r\n                                routeMeta: route.meta\r\n                              }\r\n                              : {})}\r\n                            {...(route.className\r\n                              ? {\r\n                                wrapperClass: route.className\r\n                              }\r\n                              : {})}\r\n                          /*eslint-enable */\r\n                          >\r\n                            <FinalRoute route={route} {...props} />\r\n                          </LayoutWrapper>\r\n                        </Suspense>\r\n                      )\r\n                    }}\r\n                  />\r\n                )\r\n              })}\r\n            </Switch>\r\n          </LayoutTag>\r\n        </Route>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <AppRouter basename={process.env.REACT_APP_BASENAME}>\r\n      <Switch>\r\n        {/* If user is logged in Redirect user to DefaultRoute else to login */}\r\n        <Route\r\n          exact\r\n          path='/'\r\n          render={() => {\r\n            return isUserLoggedIn() ? <Redirect to={DefaultRoute} /> : <Redirect to='/login' />\r\n          }}\r\n        />\r\n        {/* Not Auth Route */}\r\n        <Route\r\n          exact\r\n          path='/misc/not-authorized'\r\n          render={props => (\r\n            <Layouts.BlankLayout>\r\n              <NotAuthorized />\r\n            </Layouts.BlankLayout>\r\n          )}\r\n        />\r\n        {ResolveRoutes()}\r\n\r\n        {/* NotFound Error page */}\r\n        <Route path='*' component={Error} />\r\n      </Switch>\r\n    </AppRouter>\r\n  )\r\n}\r\n\r\nexport default Router\r\n","//** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useLayout = () => {\r\n  // ** States\r\n  const [lastLayout, setLastLayout] = useState(null)\r\n  const [layout, setLayout] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.type\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(layout) : value\r\n\r\n      // ** Set state\r\n      setLayout(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const handleLayout = () => {\r\n    // ** If layout is horizontal & screen size is equals to or below 1200\r\n    if (layout === 'horizontal' && window.innerWidth <= 1200) {\r\n      setLayout('vertical')\r\n      setLastLayout('horizontal')\r\n    }\r\n    // ** If lastLayout is horizontal & screen size is equals to or above 1200\r\n    if (lastLayout === 'horizontal' && window.innerWidth >= 1200) {\r\n      setLayout('horizontal')\r\n    }\r\n  }\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    handleLayout()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    // ** Window Resize Event\r\n    window.addEventListener('resize', handleLayout)\r\n  }, [layout, lastLayout])\r\n\r\n  return [layout, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useRouterTransition = () => {\r\n  // ** State\r\n  const [transition, setTransition] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.routerTransition\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.routerTransition\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(transition) : value\r\n\r\n      // ** Set state\r\n      setTransition(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [transition, setValue]\r\n}\r\n","// ** Router Import\r\nimport Router from './router/Router'\r\n\r\nconst App = props => <Router />\r\n\r\nexport default App\r\n"],"sourceRoot":""}