{"version":3,"sources":["utility/Utils.js","@core/components/avatar/index.js","utility/hooks/useSkin.js","redux/actions/auth/index.js","redux/actions/layout/index.js","@core/layouts/components/layout-wrapper/index.js","router/routes/Pages.js","router/routes/Dashboards.js","router/routes/index.js","@core/layouts/BlankLayout.js","@core/layouts/components/footer/index.js","@core/layouts/components/navbar/UserDropdown.js","@core/layouts/components/navbar/NavbarUser.js","@core/layouts/components/navbar/NavbarBookmarks.js","redux/actions/navbar/index.js","@core/layouts/components/navbar/index.js","navigation/vertical/pages.js","navigation/vertical/dashboards.js","navigation/vertical/index.js","@core/layouts/components/menu/vertical-menu/VerticalMenuHeader.js","@core/layouts/utils.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuLink.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuGroup.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuSectionHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuItems.js","@core/layouts/components/menu/vertical-menu/index.js","@core/layouts/VerticalLayout.js","utility/hooks/useRTL.js","utility/hooks/useNavbarType.js","utility/hooks/useFooterType.js","utility/hooks/useNavbarColor.js","layouts/VerticalLayout.js","router/Router.js","utility/hooks/useLayout.js","utility/hooks/useRouterTransition.js","App.js"],"names":["isObjEmpty","obj","Object","keys","length","kFormatter","num","toFixed","isUserLoggedIn","localStorage","getItem","getHomeRouteForLoggedInUser","userRole","selectThemeColors","theme","colors","primary25","primary","neutral10","neutral20","neutral30","Avatar","forwardRef","props","ref","color","className","imgClassName","initials","size","badgeUp","content","icon","badgeColor","badgeText","img","imgHeight","imgWidth","status","Tag","tag","contentStyles","rest","classnames","undefined","style","str","results","split","forEach","e","push","join","getInitials","pill","src","alt","height","width","defaultProps","useSkin","useState","item","window","JSON","parse","themeConfig","layout","skin","error","console","log","setSkin","useEffect","element","document","body","classList","remove","add","dark","bordered","value","valueToStore","Function","setItem","stringify","handleLogin","data","dispatch","type","config","accessToken","refreshToken","handleLogout","removeItem","handleContentWidth","handleMenuCollapsed","handleMenuHidden","LayoutWrapper","children","appLayout","wrapperClass","transition","routeMeta","useDispatch","store","useSelector","state","navbarStore","navbar","contentWidth","Fragment","menuCollapsed","menuHidden","query","PagesRoutes","path","component","lazy","meta","authRoute","publicRoute","DashboardRoutes","exact","Routes","BlankLayout","isMounted","setIsMounted","Footer","Date","getFullYear","onClick","preventDefault","href","target","rel","injectIntl","intl","userData","setUserData","userAvatar","avatar","defaultAvatar","UncontrolledDropdown","DropdownToggle","roleName","DropdownMenu","right","DropdownItem","Link","to","formatMessage","id","NavbarUser","ThemeToggler","NavItem","NavLink","NavbarBookmarks","setMenuVisibility","axios","get","then","response","suggestions","bookmarks","ThemeNavbar","title","permissions","navLink","badge","dashboards","pages","VerticalMenuHeader","setMenuCollapsed","setGroupOpen","menuHover","Toggler","data-tour","app","appLogoImage","appName","isNavLinkActive","link","currentURL","routerProps","isNavGroupActive","some","child","search","navigation","result","getAllParents","match","res","recurse","current","key","VerticalNavMenuLink","setGroupActive","groupActive","activeItem","setActiveItem","groupOpen","toggleActiveGroup","parentItem","currentActiveItem","LinkTag","externalLink","location","useLocation","pathname","matchPath","strict","arr","parents","searchParents","disabled","active","newTab","isActive","url","resetActiveGroup","Badge","VerticalNavMenuGroup","allParents","activeArr","includes","splice","indexOf","openArr","filter","val","onCollapseClick","pop","toggleOpenGroup","open","Collapse","isOpen","VerticalNavMenuItems","items","VerticalNavMenuSectionHeader","index","header","VerticalMenuNavItems","useContext","AbilityContext","Components","map","TagName","resolveNavItemComponent","canViewMenuItem","Sidebar","menu","setMenuHover","shadowRef","useRef","expanded","onMouseEnter","onMouseLeave","options","wheelPropagation","onScrollY","container","scrollTop","contains","scrollMenu","VerticalLayout","footer","isRtl","isRTL","getElementsByTagName","setAttribute","handleRTL","useRTL","navbarType","setNavbarType","useNavbarType","footerType","setFooterType","useFooterType","backgroundColor","navbarColor","setNavbarColor","useNavbarColor","menuVisibility","innerWidth","windowWidth","setWindowWidth","layoutStore","handleWindowWidth","isHidden","addEventListener","footerClasses","static","sticky","hidden","bgColorCondition","floating","Navbar","expand","light","show","showUnder","bottom","Button","Router","lastLayout","setLastLayout","setLayout","handleLayout","useLayout","routerTransition","setTransition","useRouterTransition","DefaultLayout","Layouts","NotAuthorized","Error","FinalRoute","route","action","resource","basename","process","REACT_APP_BASENAME","render","LayoutTag","LayoutRoutes","LayoutPaths","LayoutRoutesAndPaths","assign","fallback","App"],"mappings":"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","file":"static/js/18.4214785d.chunk.js","sourcesContent":["// ** Checks if an object is empty (returns boolean)\nexport const isObjEmpty = obj => Object.keys(obj).length === 0\n\n// ** Returns K format from a number\nexport const kFormatter = num => (num > 999 ? `${(num / 1000).toFixed(1)}k` : num)\n\n// ** Converts HTML to string\nexport const htmlToString = html => html.replace(/<\\/?[^>]+(>|$)/g, '')\n\n// ** Checks if the passed date is today\nconst isToday = date => {\n  const today = new Date()\n  return (\n    /* eslint-disable operator-linebreak */\n    date.getDate() === today.getDate() &&\n    date.getMonth() === today.getMonth() &&\n    date.getFullYear() === today.getFullYear()\n    /* eslint-enable */\n  )\n}\n\n/**\n ** Format and return date in Humanize format\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\n * @param {String} value date to format\n * @param {Object} formatting Intl object to format with\n */\nexport const formatDate = (value, formatting = { month: 'short', day: 'numeric', year: 'numeric' }) => {\n  if (!value) return value\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\n}\n\n// ** Returns short month of passed date\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\n  const date = new Date(value)\n  let formatting = { month: 'short', day: 'numeric' }\n\n  if (toTimeForCurrentDay && isToday(date)) {\n    formatting = { hour: 'numeric', minute: 'numeric' }\n  }\n\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\n}\n\n/**\n ** Return if user is logged in\n ** This is completely up to you and how you want to store the token in your frontend application\n *  ? e.g. If you are using cookies to store the application please update this function\n */\nexport const isUserLoggedIn = () => localStorage.getItem('userData')\nexport const getUserData = () => JSON.parse(localStorage.getItem('userData'))\n\n/**\n ** This function is used for demo purpose route navigation\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\n ** Please note role field is just for showing purpose it's not used by anything in frontend\n ** We are checking role just for ease\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\n * @param {String} userRole Role of user\n */\nexport const getHomeRouteForLoggedInUser = userRole => {\n  if (userRole === 'admin') return '/'\n  if (userRole === 'client') return '/access-control'\n  return '/login'\n}\n\n// ** React Select Theme Colors\nexport const selectThemeColors = theme => ({\n  ...theme,\n  colors: {\n    ...theme.colors,\n    primary25: '#7367f01a', // for option hover bg-color\n    primary: '#7367f0', // for selected option bg-color\n    neutral10: '#7367f0', // for tags bg-color\n    neutral20: '#ededed', // for input border-color\n    neutral30: '#ededed' // for input hover border-color\n  }\n})\n","// ** React Imports\nimport { forwardRef } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Badge } from 'reactstrap'\nimport classnames from 'classnames'\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    color,\n    className,\n    imgClassName,\n    initials,\n    size,\n    badgeUp,\n    content,\n    icon,\n    badgeColor,\n    badgeText,\n    img,\n    imgHeight,\n    imgWidth,\n    status,\n    tag: Tag,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = str => {\n    const results = []\n    const wordArray = str.split(' ')\n    wordArray.forEach(e => {\n      results.push(e[0])\n    })\n    return results.join('')\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar', {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames('avatar-content', {\n            'position-relative': badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\n              {badgeText ? badgeText : '0'}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt='avatarImg'\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  imgClassName: Proptypes.string,\n  className: Proptypes.string,\n  src: Proptypes.string,\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  icon: Proptypes.node,\n  contentStyles: Proptypes.object,\n  badgeText: Proptypes.string,\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  badgeColor: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  color: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.')\n    }\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.')\n    }\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!')\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: 'div'\n}\n","//** React Imports\nimport { useState, useEffect } from 'react'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\nexport const useSkin = () => {\n  // ** State\n  const [skin, setSkin] = useState(() => {\n    try {\n      // ** Get from local storage by key\n      const item = window.localStorage.getItem('skin')\n      // ** Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : themeConfig.layout.skin\n    } catch (error) {\n      // ** If error also return initialValue\n      console.log(error)\n      return themeConfig.layout.skin\n    }\n  })\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(skin) : value\n      // ** Set state\n      setSkin(valueToStore)\n      // ** Save to local storage\n      window.localStorage.setItem('skin', JSON.stringify(valueToStore))\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    // ** Get Body Tag\n    const element = window.document.body\n\n    // ** Define classnames for skins\n    const classNames = {\n      dark: 'dark-layout',\n      bordered: 'bordered-layout',\n      'semi-dark': 'semi-dark-layout'\n    }\n\n    // ** Remove all classes from Body on mount\n    element.classList.remove(...element.classList)\n\n    // ** If skin is not light add skin class\n    if (skin !== 'light') {\n      element.classList.add(classNames[skin])\n    }\n  }, [skin])\n\n  return [skin, setValue]\n}\n","// ** UseJWT import to get config\n// import useJwt from '@src/auth/jwt/useJwt'\n\n// const config = useJwt.jwtConfig\n\n// ** Handle User Login\nexport const handleLogin = data => {\n  return dispatch => {\n    dispatch({\n      type: 'LOGIN',\n      data,\n      config: {},\n      accessToken: data.accessToken,\n      refreshToken: data.refreshToken\n    })\n\n    // ** Add to user, accessToken & refreshToken to localStorage\n    localStorage.setItem('userData', JSON.stringify(data))\n    localStorage.setItem('accessToken', JSON.stringify(data.accessToken))\n    localStorage.setItem('refreshToken', JSON.stringify(data.refreshToken))\n  }\n}\n\n// ** Handle User Logout\nexport const handleLogout = () => {\n  return dispatch => {\n    dispatch({ type: 'LOGOUT', 'accessToken': null, 'refreshToken': null })\n\n    // ** Remove user, accessToken & refreshToken from localStorage\n    localStorage.removeItem('userData')\n    localStorage.removeItem('accessToken')\n    localStorage.removeItem('refreshToken')\n  }\n}\n","// ** Handles Layout Content Width (full / boxed)\nexport const handleContentWidth = value => dispatch => dispatch({ type: 'HANDLE_CONTENT_WIDTH', value })\n\n// ** Handles Menu Collapsed State (Bool)\nexport const handleMenuCollapsed = value => dispatch => dispatch({ type: 'HANDLE_MENU_COLLAPSED', value })\n\n// ** Handles Menu Hidden State (Bool)\nexport const handleMenuHidden = value => dispatch => dispatch({ type: 'HANDLE_MENU_HIDDEN', value })\n\n// ** Handles RTL (Bool)\nexport const handleRTL = value => dispatch => dispatch({ type: 'HANDLE_RTL', value })\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleContentWidth, handleMenuCollapsed, handleMenuHidden } from '@store/actions/layout'\n\n// ** Styles\nimport 'animate.css/animate.css'\n\nconst LayoutWrapper = props => {\n  // ** Props\n  const { layout, children, appLayout, wrapperClass, transition, routeMeta } = props\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state)\n  const navbarStore = store.navbar\n  const contentWidth = store.layout.contentWidth\n\n  //** Vars\n  const Tag = layout === 'HorizontalLayout' && !appLayout ? 'div' : Fragment\n\n  // ** Clean Up Function\n  const cleanUp = () => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth) {\n        dispatch(handleContentWidth('full'))\n      }\n      if (routeMeta.menuCollapsed) {\n        dispatch(handleMenuCollapsed(!routeMeta.menuCollapsed))\n      }\n      if (routeMeta.menuHidden) {\n        dispatch(handleMenuHidden(!routeMeta.menuHidden))\n      }\n    }\n  }\n\n  // ** ComponentDidMount\n  useEffect(() => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth) {\n        dispatch(handleContentWidth(routeMeta.contentWidth))\n      }\n      if (routeMeta.menuCollapsed) {\n        dispatch(handleMenuCollapsed(routeMeta.menuCollapsed))\n      }\n      if (routeMeta.menuHidden) {\n        dispatch(handleMenuHidden(routeMeta.menuHidden))\n      }\n    }\n    return () => cleanUp()\n  }, [])\n\n  return (\n    <div\n      className={classnames('app-content content overflow-hidden', {\n        [wrapperClass]: wrapperClass,\n        'show-overlay': navbarStore.query.length\n      })}\n    >\n      <div className='content-overlay'></div>\n      <div className='header-navbar-shadow' />\n      <div\n        className={classnames({\n          'content-wrapper': !appLayout,\n          'content-area-wrapper': appLayout,\n          'container p-0': contentWidth === 'boxed',\n          [`animate__animated animate__${transition}`]: transition !== 'none' && transition.length\n        })}\n      >\n        <Tag\n          /*eslint-disable */\n          {...(layout === 'HorizontalLayout' && !appLayout\n            ? { className: classnames({ 'content-body': !appLayout }) }\n            : {})}\n          /*eslint-enable */\n        >\n          {children}\n        </Tag>\n      </div>\n    </div>\n  )\n}\n\nexport default LayoutWrapper\n","import { lazy } from 'react'\n// import { Redirect } from 'react-router-dom'\n\nconst PagesRoutes = [\n  {\n    path: '/login',\n    component: lazy(() => import('../../views/pages/authentication/Login')),\n    layout: 'BlankLayout',\n    meta: {\n      authRoute: true\n    }\n  },\n  {\n    path: '/pages/station',\n    component: lazy(() => import('../../views/pages/station/index'))\n  },\n  {\n    path: '/pages/form-station',\n    component: lazy(() => import('../../views/pages/station/formStation'))\n  },\n  {\n    path: '/pages/form-SMS',\n    component: lazy(() => import('../../views/pages/station/formSMS'))\n  },\n  {\n    path: '/pages/form-email',\n    component: lazy(() => import('../../views/pages/station/formEmail'))\n  },\n  {\n    path: '/pages/users',\n    component: lazy(() => import('../../views/pages/user/index'))\n  },\n  {\n    path: '/pages/account-admin',\n    component: lazy(() => import('../../views/pages/account-admin/index'))\n  },\n  {\n    path: '/pages/devices',\n    component: lazy(() => import('../../views/pages/device/index'))\n  },\n  {\n    path: '/pages/advertising',\n    component: lazy(() => import('../../views/pages/advertising/index'))\n  },\n  {\n    path: '/user/change-password',\n    component: lazy(() => import('../../views/pages/change-password/index'))\n  },\n  {\n    path: '/user/list',\n    component: lazy(() => import('../../views/pages/change-password/index'))\n  },\n  {\n    path: '/pages/setting',\n    component: lazy(() => import('../../views/pages/setting/index'))\n  },\n  {\n    path: '/misc/not-authorized',\n    component: lazy(() => import('../../views/pages/misc/NotAuthorized')),\n    layout: 'BlankLayout',\n    meta: {\n      publicRoute: true\n    }\n  },\n  {\n    path: '/misc/maintenance',\n    component: lazy(() => import('../../views/pages/misc/Maintenance')),\n    layout: 'BlankLayout',\n    meta: {\n      publicRoute: true\n    }\n  },\n  {\n    path: '/misc/error',\n    component: lazy(() => import('../../views/pages/misc/Error')),\n    layout: 'BlankLayout',\n    meta: {\n      publicRoute: true\n    }\n  }\n]\n\nexport default PagesRoutes\n","import { lazy } from 'react'\n\nconst DashboardRoutes = [\n  // Dashboards\n  {\n    path: '/dashboard/analytics',\n    component: lazy(() => import('../../views/dashboard/analytics')),\n    exact: true\n  },\n  // {\n  //   path: '/dashboard/ecommerce',\n  //   component: lazy(() => import('../../views/dashboard/ecommerce')),\n  // }\n]\n\nexport default DashboardRoutes\n","// ** Routes Imports\n// import AppRoutes from './Apps'\n// import FormRoutes from './Forms'\nimport PagesRoutes from './Pages'\n// import TablesRoutes from './Tables'\n// import ChartMapsRoutes from './ChartsMaps'\nimport DashboardRoutes from './Dashboards'\n// import UiElementRoutes from './UiElements'\n// import ExtensionsRoutes from './Extensions'\n// import PageLayoutsRoutes from './PageLayouts'\n\n// ** Document title\nconst TemplateTitle = '%s - Vuexy React Admin Template'\n\n// ** Default Route\nconst DefaultRoute = '/dashboard/analytics'\n\n// ** Merge Routes\nconst Routes = [\n  ...DashboardRoutes,\n  // ...AppRoutes,\n  ...PagesRoutes,\n  // ...UiElementRoutes,\n  // ...ExtensionsRoutes,\n  // ...PageLayoutsRoutes,\n  // ...FormRoutes,\n  // ...TablesRoutes,\n  // ...ChartMapsRoutes\n]\n\nexport { DefaultRoute, TemplateTitle, Routes }\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Custom Hooks\nimport { useSkin } from '@hooks/useSkin'\n\nconst BlankLayout = ({ children, ...rest }) => {\n  // ** Hooks\n  const [skin, setSkin] = useSkin()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div className='blank-page'>\n      <div className='app-content content'>\n        <div className='content-wrapper'>\n          <div className='content-body'>{children}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BlankLayout\n","// ** Icons Import\nimport { Heart } from 'react-feather'\n\nconst Footer = () => {\n  return (\n    <p className='clearfix mb-0'>\n      <span className='float-md-left d-block d-md-inline-block mt-25'>\n        COPYRIGHT © {new Date().getFullYear()}{' '}\n        <a onClick={(e) => { e.preventDefault() }} href='https://1.envato.market/pixinvent_portfolio' target='_blank' rel='noopener noreferrer'>\n          MakeFamousApp.com\n        </a>\n        <span className='d-none d-sm-inline-block'>, All rights Reserved</span>\n      </span>\n      <span className='float-md-right d-none d-md-block'>\n        Hand-crafted & Made with\n        <Heart size={14} />\n      </span>\n    </p>\n  )\n}\n\nexport default Footer\n","// ** React Imports\nimport { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Utils\nimport { isUserLoggedIn } from '@utils'\n\n// ** Store & Actions\nimport { useDispatch } from 'react-redux'\nimport { handleLogout } from '@store/actions/auth'\n\n// ** Third Party Components\nimport { UncontrolledDropdown, DropdownMenu, DropdownToggle, DropdownItem } from 'reactstrap'\nimport { Lock, Power } from 'react-feather'\n\n// ** Default Avatar Image\nimport defaultAvatar from '@src/assets/images/portrait/small/avatar-s-11.jpg'\n\nimport { injectIntl } from 'react-intl';\n\nconst UserDropdown = ({ intl }) => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n\n  // ** State\n  const [userData, setUserData] = useState(null)\n\n  //** ComponentDidMount\n  useEffect(() => {\n    if (isUserLoggedIn() !== null) {\n      setUserData(JSON.parse(localStorage.getItem('userData')))\n    }\n  }, [])\n\n  //** Vars\n  const userAvatar = (userData && userData.avatar) || defaultAvatar\n\n  return (\n    <UncontrolledDropdown tag='li' className='dropdown-user nav-item'>\n      <DropdownToggle href='/' tag='a' className='nav-link dropdown-user-link' onClick={e => e.preventDefault()}>\n        <div className='user-nav d-sm-flex d-none'>\n          <span className='user-name font-weight-bold'>{(userData && userData['username']) || 'John Doe'}</span>\n          <span className='user-status'>{(userData && userData.roleName) || 'Admin'}</span>\n        </div>\n        <Avatar img={userAvatar} imgHeight='40' imgWidth='40' status='online' />\n      </DropdownToggle>\n      <DropdownMenu right>\n        {/* <DropdownItem tag={Link} to='/pages/profile'>\n          <User size={14} className='mr-75' />\n          <span className='align-middle'>Profile</span>\n        </DropdownItem> */}\n        {/* <DropdownItem tag={Link} to='/apps/email'>\n          <Mail size={14} className='mr-75' />\n          <span className='align-middle'>Inbox</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to='/apps/todo'>\n          <CheckSquare size={14} className='mr-75' />\n          <span className='align-middle'>Tasks</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to='/apps/chat'>\n          <MessageSquare size={14} className='mr-75' />\n          <span className='align-middle'>Chats</span>\n        </DropdownItem>\n        <DropdownItem divider />\n        <DropdownItem tag={Link} to='/pages/account-settings'>\n          <Settings size={14} className='mr-75' />\n          <span className='align-middle'>Settings</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to='/pages/pricing'>\n          <CreditCard size={14} className='mr-75' />\n          <span className='align-middle'>Pricing</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to='/pages/faq'>\n          <HelpCircle size={14} className='mr-75' />\n          <span className='align-middle'>FAQ</span>\n        </DropdownItem> */}\n        <DropdownItem tag={Link} to='/user/change-password'>\n          <Lock size={14} className='mr-75' />\n          <span className='align-middle'>{\n            intl.formatMessage({id: 'changePass'})\n          }</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to='/login' onClick={() => dispatch(handleLogout())}>\n          <Power size={14} className='mr-75' />\n          <span className='align-middle'>{\n            intl.formatMessage({id: 'logout'})\n          }</span>\n        </DropdownItem>\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  )\n}\n\nexport default injectIntl(UserDropdown)\n","// ** Dropdowns Imports\n// import IntlDropdown from './IntlDropdown'\n// import CartDropdown from './CartDropdown'\nimport UserDropdown from './UserDropdown'\n// import NavbarSearch from './NavbarSearch'\n// import NotificationDropdown from './NotificationDropdown'\n\n// ** Third Party Components\nimport { Sun, Moon } from 'react-feather'\nimport { NavItem, NavLink } from 'reactstrap'\n\nconst NavbarUser = props => {\n  // ** Props\n  const { skin, setSkin } = props\n\n  // ** Function to toggle Theme (Light/Dark)\n  const ThemeToggler = () => {\n    if (skin === 'dark') {\n      return <Sun className='ficon' onClick={() => setSkin('light')} />\n    } else {\n      return <Moon className='ficon' onClick={() => setSkin('dark')} />\n    }\n  }\n\n  return (\n    <ul className='nav navbar-nav align-items-center ml-auto'>\n      {/* <IntlDropdown /> */}\n      <NavItem className='d-none d-lg-block'>\n        <NavLink className='nav-link-style'>\n          <ThemeToggler />\n        </NavLink>\n      </NavItem>\n      {/* <NavbarSearch />\n      <CartDropdown />\n      <NotificationDropdown /> */}\n      <UserDropdown />\n    </ul>\n  )\n}\nexport default NavbarUser\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport * as Icon from 'react-feather'\nimport classnames from 'classnames'\nimport Autocomplete from '@components/autocomplete'\nimport {\n  NavItem,\n  NavLink,\n  UncontrolledTooltip,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getBookmarks, updateBookmarked, handleSearchQuery } from '@store/actions/navbar'\n\nconst NavbarBookmarks = props => {\n  // ** Props\n  const { setMenuVisibility } = props\n\n  // ** State\n  const [value, setValue] = useState('')\n  const [openSearch, setOpenSearch] = useState(false)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.navbar)\n\n  // ** ComponentDidMount\n  useEffect(() => {\n    dispatch(getBookmarks())\n  }, [])\n\n  // ** Loops through Bookmarks Array to return Bookmarks\n  const renderBookmarks = () => {\n    if (store.bookmarks.length) {\n      return store.bookmarks\n        .map(item => {\n          const IconTag = Icon[item.icon]\n          return (\n            <NavItem key={item.target} className='d-none d-lg-block'>\n              <NavLink tag={Link} to={item.link} id={item.target}>\n                <IconTag className='ficon' />\n                <UncontrolledTooltip target={item.target}>{item.title}</UncontrolledTooltip>\n              </NavLink>\n            </NavItem>\n          )\n        })\n        .slice(0, 10)\n    } else {\n      return null\n    }\n  }\n\n  // ** If user has more than 10 bookmarks then add the extra Bookmarks to a dropdown\n  const renderExtraBookmarksDropdown = () => {\n    if (store.bookmarks.length && store.bookmarks.length >= 11) {\n      return (\n        <NavItem className='d-none d-lg-block'>\n          <NavLink tag='span'>\n            <UncontrolledDropdown>\n              <DropdownToggle tag='span'>\n                <Icon.ChevronDown className='ficon' />\n              </DropdownToggle>\n              <DropdownMenu right>\n                {store.bookmarks\n                  .map(item => {\n                    const IconTag = Icon[item.icon]\n                    return (\n                      <DropdownItem tag={Link} to={item.link} key={item.id}>\n                        <IconTag className='mr-50' size={14} />\n                        <span className='align-middle'>{item.title}</span>\n                      </DropdownItem>\n                    )\n                  })\n                  .slice(10)}\n              </DropdownMenu>\n\n            </UncontrolledDropdown>\n          </NavLink>\n        </NavItem>\n      )\n    } else {\n      return null\n    }\n  }\n\n  // ** Removes query in store\n  const handleClearQueryInStore = () => dispatch(handleSearchQuery(''))\n\n  // ** Loops through Bookmarks Array to return Bookmarks\n  const onKeyDown = e => {\n    if (e.keyCode === 27 || e.keyCode === 13) {\n      setTimeout(() => {\n        setOpenSearch(false)\n        handleClearQueryInStore()\n      }, 1)\n    }\n  }\n\n  // ** Function to toggle Bookmarks\n  const handleBookmarkUpdate = id => dispatch(updateBookmarked(id))\n\n  // ** Function to handle Bookmarks visibility\n  const handleBookmarkVisibility = () => {\n    setOpenSearch(!openSearch)\n    setValue('')\n    handleClearQueryInStore()\n  }\n\n  // ** Function to handle Input change\n  const handleInputChange = e => {\n    setValue(e.target.value)\n    dispatch(handleSearchQuery(e.target.value))\n  }\n\n  // ** Function to handle external Input click\n  const handleExternalClick = () => {\n    if (openSearch === true) {\n      setOpenSearch(false)\n      handleClearQueryInStore()\n    }\n  }\n\n  // ** Function to clear input value\n  const handleClearInput = setUserInput => {\n    if (!openSearch) {\n      setUserInput('')\n      handleClearQueryInStore()\n    }\n  }\n\n  return (\n    <Fragment>\n      <ul className='navbar-nav d-xl-none'>\n        <NavItem className='mobile-menu mr-auto'>\n          <NavLink className='nav-menu-main menu-toggle hidden-xs is-active' onClick={() => setMenuVisibility(true)}>\n            <Icon.Menu className='ficon' />\n          </NavLink>\n        </NavItem>\n      </ul>\n      {/* <ul className='nav navbar-nav bookmark-icons'>\n        {renderBookmarks()}\n        {renderExtraBookmarksDropdown()}\n        <NavItem className='nav-item d-none d-lg-block'>\n          <NavLink className='bookmark-star' onClick={handleBookmarkVisibility}>\n            <Icon.Star className='ficon text-warning' />\n          </NavLink>\n          <div className={classnames('bookmark-input search-input', { show: openSearch })}>\n            <div className='bookmark-input-icon'>\n              <Icon.Search size={14} />\n            </div>\n            {openSearch && store.suggestions.length ? (\n              <Autocomplete\n                wrapperClass={classnames('search-list search-list-bookmark', {\n                  show: openSearch\n                })}\n                className='form-control'\n                suggestions={!value.length ? store.bookmarks : store.suggestions}\n                filterKey='title'\n                autoFocus={true}\n                defaultSuggestions\n                suggestionLimit={!value.length ? store.bookmarks.length : 6}\n                placeholder='Search...'\n                externalClick={handleExternalClick}\n                clearInput={(userInput, setUserInput) => handleClearInput(setUserInput)}\n                onKeyDown={onKeyDown}\n                value={value}\n                onChange={handleInputChange}\n                customRender={(\n                  item,\n                  i,\n                  filteredData,\n                  activeSuggestion,\n                  onSuggestionItemClick,\n                  onSuggestionItemHover\n                ) => {\n                  const IconTag = Icon[item.icon ? item.icon : 'X']\n                  return (\n                    <li\n                      key={i}\n                      onMouseEnter={() => onSuggestionItemHover(filteredData.indexOf(item))}\n                      className={classnames('suggestion-item d-flex align-items-center justify-content-between', {\n                        active: filteredData.indexOf(item) === activeSuggestion\n                      })}\n                    >\n                      <Link\n                        to={item.link}\n                        className='d-flex align-items-center justify-content-between p-0'\n                        onClick={() => {\n                          setOpenSearch(false)\n                          handleClearQueryInStore()\n                        }}\n                        style={{\n                          width: 'calc(90%)'\n                        }}\n                      >\n                        <div className='d-flex justify-content-start align-items-center overflow-hidden'>\n                          <IconTag size={17.5} className='mr-75' />\n                          <span className='text-truncate'>{item.title}</span>\n                        </div>\n                      </Link>\n                      <Icon.Star\n                        size={17.5}\n                        className={classnames('bookmark-icon float-right', {\n                          'text-warning': item.isBookmarked\n                        })}\n                        onClick={() => handleBookmarkUpdate(item.id)}\n                      />\n                    </li>\n                  )\n                }}\n              />\n            ) : null}\n          </div>\n        </NavItem>\n      </ul>\n     */}\n    </Fragment>\n  )\n}\n\nexport default NavbarBookmarks\n","import axios from 'axios'\n\n// ** Get Bookmarks Array from @fakeDB\nexport const getBookmarks = () => {\n  return dispatch => {\n    return axios.get('/api/bookmarks/data').then(response => {\n      dispatch({\n        type: 'GET_BOOKMARKS',\n        data: response.data.suggestions,\n        bookmarks: response.data.bookmarks\n      })\n    })\n  }\n}\n\n// ** Update & Get Updated Bookmarks Array\nexport const updateBookmarked = id => {\n  return dispatch => {\n    return axios.post('/api/bookmarks/update', { id }).then(() => {\n      dispatch({ type: 'UPDATE_BOOKMARKED', id })\n    })\n  }\n}\n\n// ** Handle Bookmarks & Main Search Queries\nexport const handleSearchQuery = val => dispatch => dispatch({ type: 'HANDLE_SEARCH_QUERY', val })\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport NavbarUser from './NavbarUser'\nimport NavbarBookmarks from './NavbarBookmarks'\n\nconst ThemeNavbar = props => {\n  // ** Props\n  const { skin, setSkin, setMenuVisibility } = props\n\n  return (\n    <Fragment>\n      <div className='bookmark-wrapper d-flex align-items-center'>\n        <NavbarBookmarks setMenuVisibility={setMenuVisibility} />\n      </div>\n      <NavbarUser skin={skin} setSkin={setSkin} />\n    </Fragment>\n  )\n}\n\nexport default ThemeNavbar\n","// @ts-nocheck\n/* eslint-disable import/no-anonymous-default-export */\nimport { User, Book, Shield, HardDrive, Cast, Image, Settings } from 'react-feather'\nexport default [\n  {\n    id: 'station',\n    title: 'stations',\n    icon: <HardDrive size={12} />,\n    permissions: [],\n    navLink: '/pages/station'\n  },\n  {\n    id: 'account-admin',\n    title: 'admin',\n    icon: <Shield size={12} />,\n    permissions: [],\n    navLink: '/pages/account-admin'\n  },\n  {\n    id: 'device',\n    title: 'devices',\n    icon: <Cast size={12} />,\n    permissions: [],\n    navLink: '/pages/devices'\n  },\n  {\n    id: 'user',\n    title: 'User',\n    icon: <User size={12} />,\n    permissions: [],\n    navLink: '/pages/users'\n  },\n  {\n    id: 'advertising',\n    title: 'advertising',\n    icon: <Image size={12} />,\n    permissions: [],\n    navLink: '/pages/advertising'\n  },\n  {\n    id: 'setting',\n    title: 'setting',\n    icon: <Settings size={12} />,\n    permissions: [],\n    navLink: '/pages/setting'\n  },\n]\n","// @ts-nocheck\nimport { Home, Circle } from 'react-feather'\n\nexport default [\n  {\n    id: 'dashboards',\n    title: 'home',\n    icon: <Home size={20} />,\n    badge: 'light-warning',\n    navLink: '/dashboard/analytics',\n    permissions: []\n  }\n]\n","/* eslint-disable import/no-anonymous-default-export */\n// ** Navigation sections imports\n\nimport pages from './pages'\n\nimport dashboards from './dashboards'\n\n\n// ** Merge & Export\nexport default [...dashboards, ...pages]\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\n\n// ** Third Party Components\nimport { Disc, X, Circle } from 'react-feather'\n\n// ** Config\nimport themeConfig from '@configs/themeConfig'\n\nconst VerticalMenuHeader = props => {\n  // ** Props\n  const { menuCollapsed, setMenuCollapsed, setMenuVisibility, setGroupOpen, menuHover } = props\n\n  // ** Reset open group\n  useEffect(() => {\n    if (!menuHover && menuCollapsed) setGroupOpen([])\n  }, [menuHover, menuCollapsed])\n\n  // ** Menu toggler component\n  const Toggler = () => {\n    if (!menuCollapsed) {\n      return (\n        <Disc\n          size={20}\n          data-tour='toggle-icon'\n          className='text-primary toggle-icon d-none d-xl-block'\n          onClick={() => setMenuCollapsed(true)}\n        />\n      )\n    } else {\n      return (\n        <Circle\n          size={20}\n          data-tour='toggle-icon'\n          className='text-primary toggle-icon d-none d-xl-block'\n          onClick={() => setMenuCollapsed(false)}\n        />\n      )\n    }\n  }\n\n  return (\n    <div className='navbar-header'>\n      <ul className='nav navbar-nav flex-row'>\n        <li className='nav-item mr-auto'>\n          <NavLink to='/' className='navbar-brand'>\n            <span className='brand-logo'>\n              <img src={themeConfig.app.appLogoImage} alt='logo' />\n            </span>\n            <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\n          </NavLink>\n        </li>\n        <li className='nav-item nav-toggle'>\n          <div className='nav-link modern-nav-toggle cursor-pointer'>\n            <Toggler />\n            <X onClick={() => setMenuVisibility(false)} className='toggle-icon icon-x d-block d-xl-none' size={20} />\n          </div>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default VerticalMenuHeader\n","// ** React Imports\nimport { useContext } from 'react'\nimport { AbilityContext } from '@src/utility/context/Can'\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveVerticalNavMenuItemComponent = item => {\n  if (item.header) return 'VerticalNavMenuSectionHeader'\n  if (item.children) return 'VerticalNavMenuGroup'\n  return 'VerticalNavMenuLink'\n}\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveHorizontalNavMenuItemComponent = item => {\n  if (item.children) return 'HorizontalNavMenuGroup'\n  return 'HorizontalNavMenuLink'\n}\n\n/**\n * Check if nav-link is active\n * @param {Object} link nav-link object\n */\n// export const isNavLinkActive = (link, currentURL, match) => {\n//   // return currentURL === link || (URLParams && Object.keys(URLParams).length && currentURLFilter === item.navLink)\n//   const getFirstObjProp = obj => obj[Object.keys(obj)[0]]\n//   return (\n//     currentURL === link ||\n//     (match !== null && match !== undefined && match.url === `${link}/${getFirstObjProp(match.params)}`)\n//   )\n// }\n\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\n  return (\n    currentURL === link ||\n    (routerProps && routerProps.meta && routerProps.meta.navLink && routerProps.meta.navLink === link)\n  )\n  // return currentURL === link\n}\n\n/**\n * Check if nav group is\n * @param {Array} children Group children\n */\n// export const isNavGroupActive = (children, currentURL, match) => {\n//   return children.some(child => {\n//     // If child have children => It's group => Go deeper(recursive)\n//     if (child.children) {\n//       return isNavGroupActive(child.children, currentURL, match)\n//     }\n//     // else it's link => Check for matched Route\n//     return isNavLinkActive(child.navLink, currentURL, match)\n//   })\n// }\nexport const isNavGroupActive = (children, currentURL, routerProps) => {\n  return children.some(child => {\n    // If child have children => It's group => Go deeper(recursive)\n    if (child.children) {\n      return isNavGroupActive(child.children, currentURL, routerProps)\n    }\n    // else it's link => Check for matched Route\n    return isNavLinkActive(child.navLink, currentURL, routerProps)\n  })\n}\n\n/**\n * Search for parent object\n * @param {Array} navigation Group children\n * @param {string} currentURL current URL\n */\n// export const search = (navigation, currentURL, match) => {\n//   let result\n//   navigation.some(child => {\n//     let children\n//     // If child have children => It's group => Go deeper(recursive)\n//     if (child.children && (children = search(child.children, currentURL, match))) {\n//       return (result = {\n//         id: child.id,\n//         children\n//       })\n//     }\n\n//     // else it's link => Check for matched Route\n//     if (isNavLinkActive(child.navLink, currentURL, match)) {\n//       return (result = {\n//         id: child.id\n//       })\n//     }\n//   })\n//   return result\n// }\n\nexport const search = (navigation, currentURL, routerProps) => {\n  let result\n  navigation.some(child => {\n    let children\n    // If child have children => It's group => Go deeper(recursive)\n    if (child.children && (children = search(child.children, currentURL, routerProps))) {\n      return (result = {\n        id: child.id,\n        children\n      })\n    }\n\n    // else it's link => Check for matched Route\n    if (isNavLinkActive(child.navLink, currentURL, routerProps)) {\n      return (result = {\n        id: child.id\n      })\n    }\n  })\n  return result\n}\n\n/**\n * Loop through nested object\n * @param {object} obj nested object\n */\nexport const getAllParents = (obj, match) => {\n  const res = []\n  const recurse = (obj, current) => {\n    for (const key in obj) {\n      const value = obj[key]\n      if (value !== undefined) {\n        if (value && typeof value === 'object') {\n          recurse(value, key)\n        } else {\n          if (key === match) {\n            res.push(value)\n          }\n        }\n      }\n    }\n  }\n  recurse(obj)\n  return res\n}\n\nexport const canViewMenuGroup = item => {\n  // const ability = useContext(AbilityContext)\n  // // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\n  // const hasAnyVisibleChild = item.children && item.children.some(i => ability.can(i.action, i.resource))\n\n  // // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\n  // // ** Else check for ability using provided resource and action along with checking if has any visible child\n  // if (!(item.action && item.resource)) {\n  //   return hasAnyVisibleChild\n  // }\n  // return ability.can(item.action, item.resource) && hasAnyVisibleChild\n  return true\n}\n\nexport const canViewMenuItem = item => {\n  // const ability = useContext(AbilityContext)\n  // return ability.can(item.action, item.resource)\n  const userData = JSON.parse(localStorage.getItem('userData') || `{}`)\n  const { permissions } = userData\n\n  const arrayPers = !permissions || permissions === '' ? [] : permissions.split(',')\n  const permissionsCheck = item.permissions || []\n  let check = true\n  // permissionsCheck.forEach(element => {\n  //   const index = arrayPers.findIndex(el2 => el2 === element)\n  //   if (index !== -1) {\n  //     check = true\n  //   }\n  // });\n\n  return check\n}\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink, useLocation, matchPath, useParams } from 'react-router-dom'\n\n// ** Third Party Components\nimport { Badge } from 'reactstrap'\nimport classnames from 'classnames'\nimport { FormattedMessage } from 'react-intl'\n\n// ** Vertical Menu Array Of Items\nimport navigation from '@src/navigation/vertical'\n\n// ** Utils\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils'\n\nconst VerticalNavMenuLink = ({\n  item,\n  groupActive,\n  setGroupActive,\n  activeItem,\n  setActiveItem,\n  groupOpen,\n  setGroupOpen,\n  toggleActiveGroup,\n  parentItem,\n  routerProps,\n  currentActiveItem\n}) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? 'a' : NavLink\n\n  // ** URL Vars\n  const location = useLocation()\n  const currentURL = location.pathname\n\n  // ** To match path\n  const match = matchPath(currentURL, {\n    path: `${item.navLink}/:param`,\n    exact: true,\n    strict: false\n  })\n\n  // ** Search for current item parents\n  const searchParents = (navigation, currentURL) => {\n    const parents = search(navigation, currentURL, routerProps) // Search for parent object\n    const allParents = getAllParents(parents, 'id') // Parents Object to Parents Array\n    return allParents\n  }\n\n  // ** URL Vars\n  const resetActiveGroup = navLink => {\n    const parents = search(navigation, navLink, match)\n    toggleActiveGroup(item.id, parents)\n  }\n\n  // ** Reset Active & Open Group Arrays\n  const resetActiveAndOpenGroups = () => {\n    setGroupActive([])\n    setGroupOpen([])\n  }\n\n  // ** Checks url & updates active item\n  useEffect(() => {\n    if (currentActiveItem !== null) {\n      setActiveItem(currentActiveItem)\n      const arr = searchParents(navigation, currentURL)\n      setGroupActive([...arr])\n    }\n  }, [location])\n\n  return (\n    <li\n      className={classnames({\n        'nav-item': !item.children,\n        disabled: item.disabled,\n        active: item.navLink === activeItem\n      })}\n    >\n      <LinkTag\n        className='d-flex align-items-center'\n        target={item.newTab ? '_blank' : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || '/'\n            }\n          : {\n              to: item.navLink || '/',\n              isActive: (match, location) => {\n                if (!match) {\n                  return false\n                }\n\n                if (match.url && match.url !== '' && match.url === item.navLink) {\n                  currentActiveItem = item.navLink\n                }\n              }\n            })}\n        /*eslint-enable */\n        onClick={e => {\n          if (!item.navLink.length) {\n            e.preventDefault()\n          }\n          parentItem ? resetActiveGroup(item.navLink) : resetActiveAndOpenGroups()\n        }}\n      >\n        {item.icon}\n        <span className='menu-item text-truncate'>\n          <FormattedMessage id={item.title} />\n        </span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuLink\n","// ** React Imports\nimport { Link, useLocation } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { Collapse, Badge } from 'reactstrap'\nimport { FormattedMessage } from 'react-intl'\n\n// ** Vertical Menu Items Component\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\n\n// ** Utils\nimport { isNavGroupActive, getAllParents } from '@layouts/utils'\n\nconst VerticalNavMenuGroup = ({\n  item,\n  groupActive,\n  setGroupActive,\n  activeItem,\n  setActiveItem,\n  groupOpen,\n  setGroupOpen,\n  parentItem,\n  menuCollapsed,\n  menuHover,\n  routerProps,\n  currentActiveItem\n}) => {\n  // ** Current Val\n  const currentURL = useLocation().pathname\n\n  // ** Toggles Open Group\n  const toggleOpenGroup = (item, parentItem) => {\n    let openArr = groupOpen\n    let allParents\n\n    if (parentItem) {\n      allParents = getAllParents(parentItem, 'id')\n      allParents.pop()\n    }\n\n    // ** If user clicked on menu group inside already opened group i.g. when user click on blog group inside pages group\n    if (groupOpen && allParents && groupOpen[0] === allParents[0]) {\n      groupOpen.includes(item) ? openArr.splice(openArr.indexOf(item), 1) : openArr.push(item)\n    } else {\n      openArr = []\n      if (!groupOpen.includes(item)) {\n        openArr.push(item)\n      }\n    }\n\n    // ** Set Open Group\n    setGroupOpen([...openArr])\n  }\n\n  // ** Toggle Active Group\n  const toggleActiveGroup = (item, parentItem) => {\n    let activeArr = groupActive\n    let allParents\n\n    if (parentItem) {\n      allParents = getAllParents(parentItem, 'id')\n      activeArr = allParents\n    } else {\n      activeArr.includes(item) ? activeArr.splice(activeArr.indexOf(item), 1) : activeArr.push(item)\n    }\n\n    // ** Set open group removing any activegroup item present in opengroup state\n    const openArr = groupOpen.filter(val => !activeArr.includes(val))\n    setGroupOpen([...openArr])\n\n    // **  Set Active Group\n    setGroupActive([...activeArr])\n  }\n\n  // ** On Group Item Click\n  const onCollapseClick = (e, item) => {\n    if ((groupActive && groupActive.includes(item.id)) || isNavGroupActive(item.children, currentURL, routerProps)) {\n      toggleActiveGroup(item.id)\n    } else {\n      toggleOpenGroup(item.id, parentItem)\n    }\n\n    e.preventDefault()\n  }\n\n  // ** Returns condition to add open class\n  const openClassCondition = id => {\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\n      if (groupActive.includes(id) || groupOpen.includes(item.id)) {\n        return true\n      }\n    } else if (groupActive.includes(id) && menuCollapsed && menuHover === false) {\n      return false\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <li\n      className={classnames('nav-item has-sub', {\n        open: openClassCondition(item.id),\n        'menu-collapsed-open': groupActive.includes(item.id),\n        'sidebar-group-active': groupActive.includes(item.id) || groupOpen.includes(item.id)\n      })}\n    >\n      <Link className='d-flex align-items-center' to='/' onClick={e => onCollapseClick(e, item)}>\n        {item.icon}\n        <span className='menu-title text-truncate'>\n          <FormattedMessage id={item.title} />\n        </span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </Link>\n\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\n      <ul className='menu-content'>\n        <Collapse isOpen={(groupActive && groupActive.includes(item.id)) || (groupOpen && groupOpen.includes(item.id))}>\n          <VerticalNavMenuItems\n            items={item.children}\n            groupActive={groupActive}\n            setGroupActive={setGroupActive}\n            groupOpen={groupOpen}\n            setGroupOpen={setGroupOpen}\n            toggleActiveGroup={toggleActiveGroup}\n            parentItem={item}\n            menuCollapsed={menuCollapsed}\n            menuHover={menuHover}\n            routerProps={routerProps}\n            currentActiveItem={currentActiveItem}\n            activeItem={activeItem}\n            setActiveItem={setActiveItem}\n          />\n        </Collapse>\n      </ul>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuGroup\n","// ** Third Party Components\nimport { FormattedMessage } from 'react-intl'\nimport { MoreHorizontal } from 'react-feather'\n\nconst VerticalNavMenuSectionHeader = ({ item, index }) => {\n  return (\n    <li className='navigation-header'>\n      <span>\n        <FormattedMessage id={item.header} />\n      </span>\n      <MoreHorizontal className='feather-more-horizontal' />\n    </li>\n  )\n}\n\nexport default VerticalNavMenuSectionHeader\n","// ** React Imports\nimport { useContext } from 'react'\n\n// ** Vertical Menu Components\nimport VerticalNavMenuLink from './VerticalNavMenuLink'\nimport VerticalNavMenuGroup from './VerticalNavMenuGroup'\nimport VerticalNavMenuSectionHeader from './VerticalNavMenuSectionHeader'\n\n// ** Ability Context\nimport { AbilityContext } from '@src/utility/context/Can'\n\n// ** Utils\nimport {\n  resolveVerticalNavMenuItemComponent as resolveNavItemComponent,\n  canViewMenuGroup,\n  canViewMenuItem\n} from '@layouts/utils'\n\nconst VerticalMenuNavItems = props => {\n  // ** Context\n  const ability = useContext(AbilityContext)\n\n  // ** Components Object\n  const Components = {\n    VerticalNavMenuSectionHeader,\n    VerticalNavMenuGroup,\n    VerticalNavMenuLink\n  }\n\n  // ** Render Nav Menu Items\n  const RenderNavItems = props.items.map((item, index) => {\n    // console.log(item, 24234)\n    const TagName = Components[resolveNavItemComponent(item)]\n    if (item.children) {\n      return canViewMenuGroup(item) && <TagName item={item} index={index} key={item.id} {...props} />\n    }\n\n    return canViewMenuItem(item) && <TagName key={item.id || item.header} item={item} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default VerticalMenuNavItems\n","// ** React Imports\nimport { Fragment, useState, useRef } from 'react'\n\n// ** Vertical Menu Items Array\nimport navigation from '@src/navigation/vertical'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\n// ** Vertical Menu Components\nimport VerticalMenuHeader from './VerticalMenuHeader'\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\n\nconst Sidebar = props => {\n  // ** Props\n  const { menuCollapsed, routerProps, menu, currentActiveItem, skin } = props\n\n  // ** States\n  const [groupOpen, setGroupOpen] = useState([])\n  const [groupActive, setGroupActive] = useState([])\n  const [activeItem, setActiveItem] = useState(null)\n\n  // ** Menu Hover State\n  const [menuHover, setMenuHover] = useState(false)\n\n  // ** Ref\n  const shadowRef = useRef(null)\n\n  // ** Function to handle Mouse Enter\n  const onMouseEnter = () => {\n    if (menuCollapsed) {\n      setMenuHover(true)\n    }\n  }\n\n  // ** Scroll Menu\n  const scrollMenu = container => {\n    if (shadowRef && container.scrollTop > 0) {\n      if (!shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.add('d-block')\n      }\n    } else {\n      if (shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.remove('d-block')\n      }\n    }\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={classnames('main-menu menu-fixed menu-accordion menu-shadow', {\n          expanded: menuHover || menuCollapsed === false,\n          'menu-light': skin !== 'semi-dark' && skin !== 'dark',\n          'menu-dark': skin === 'semi-dark' || skin === 'dark'\n        })}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={() => setMenuHover(false)}\n      >\n        {menu ? (\n          menu\n        ) : (\n            <Fragment>\n              {/* Vertical Menu Header */}\n              <VerticalMenuHeader setGroupOpen={setGroupOpen} menuHover={menuHover} {...props} />\n              {/* Vertical Menu Header Shadow */}\n              <div className='shadow-bottom' ref={shadowRef}></div>\n              {/* Perfect Scrollbar */}\n              <PerfectScrollbar\n                className='main-menu-content'\n                options={{ wheelPropagation: false }}\n                onScrollY={container => scrollMenu(container)}\n              >\n                <ul className='navigation navigation-main'>\n                  <VerticalNavMenuItems\n                    items={navigation}\n                    groupActive={groupActive}\n                    setGroupActive={setGroupActive}\n                    activeItem={activeItem}\n                    setActiveItem={setActiveItem}\n                    groupOpen={groupOpen}\n                    setGroupOpen={setGroupOpen}\n                    routerProps={routerProps}\n                    menuCollapsed={menuCollapsed}\n                    menuHover={menuHover}\n                    currentActiveItem={currentActiveItem}\n                  />\n                </ul>\n              </PerfectScrollbar>\n            </Fragment>\n          )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Sidebar\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleMenuCollapsed, handleContentWidth, handleMenuHidden } from '@store/actions/layout'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ArrowUp } from 'react-feather'\nimport ScrollToTop from 'react-scroll-up'\nimport { Navbar, Button } from 'reactstrap'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\n// ** Custom Components\nimport Customizer from '@components/customizer'\nimport FooterComponent from './components/footer'\nimport NavbarComponent from './components/navbar'\nimport SidebarComponent from './components/menu/vertical-menu'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\nimport { useSkin } from '@hooks/useSkin'\nimport { useNavbarType } from '@hooks/useNavbarType'\nimport { useFooterType } from '@hooks/useFooterType'\nimport { useNavbarColor } from '@hooks/useNavbarColor'\n\n// ** Styles\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss'\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss'\n\nconst VerticalLayout = props => {\n  // ** Props\n  const { children, navbar, footer, menu, routerProps, currentActiveItem } = props\n\n  // ** Hooks\n  const [skin, setSkin] = useSkin()\n  const [isRtl, setIsRtl] = useRTL()\n  const [navbarType, setNavbarType] = useNavbarType()\n  const [footerType, setFooterType] = useFooterType()\n  const [navbarColor, setNavbarColor] = useNavbarColor()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [menuVisibility, setMenuVisibility] = useState(false)\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector(state => state.layout)\n\n  // ** Update Window Width\n  const handleWindowWidth = () => {\n    setWindowWidth(window.innerWidth)\n  }\n\n  // ** Vars\n  const location = useLocation()\n  const contentWidth = layoutStore.contentWidth\n  const menuCollapsed = layoutStore.menuCollapsed\n  const isHidden = layoutStore.menuHidden\n\n  // ** Toggles Menu Collapsed\n  const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val))\n\n  // ** Handles Content Width\n  const setContentWidth = val => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\n\n  //** This function will detect the Route Change and will hide the menu on menu item click\n  useEffect(() => {\n    if (menuVisibility && windowWidth < 1200) {\n      setMenuVisibility(false)\n    }\n  }, [location])\n\n  //** Sets Window Size & Layout Props\n  useEffect(() => {\n    if (window !== undefined) {\n      window.addEventListener('resize', handleWindowWidth)\n    }\n  }, [windowWidth])\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  }\n\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static',\n    hidden: 'navbar-hidden'\n  }\n\n  const navbarClasses = {\n    floating: 'floating-nav',\n    sticky: 'fixed-top',\n    static: 'navbar-static-top',\n    hidden: 'd-none'\n  }\n\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\n\n  if (!isMounted) {\n    return null\n  }\n  return (\n    <div\n      className={classnames(\n        `wrapper vertical-layout ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\n          footerClasses[footerType] || 'footer-static'\n        }`,\n        {\n          // Modern Menu\n          'vertical-menu-modern': windowWidth >= 1200,\n          'menu-collapsed': menuCollapsed && windowWidth >= 1200,\n          'menu-expanded': !menuCollapsed && windowWidth > 1200,\n\n          // Overlay Menu\n          'vertical-overlay-menu': windowWidth < 1200,\n          'menu-hide': !menuVisibility && windowWidth < 1200,\n          'menu-open': menuVisibility && windowWidth < 1200\n        }\n      )}\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\n    >\n      {!isHidden ? (\n        <SidebarComponent\n          skin={skin}\n          menu={menu}\n          menuCollapsed={menuCollapsed}\n          menuVisibility={menuVisibility}\n          setMenuCollapsed={setMenuCollapsed}\n          setMenuVisibility={setMenuVisibility}\n          routerProps={routerProps}\n          currentActiveItem={currentActiveItem}\n        />\n      ) : null}\n\n      <Navbar\n        expand='lg'\n        light={skin !== 'dark'}\n        dark={skin === 'dark' || bgColorCondition}\n        color={bgColorCondition ? navbarColor : undefined}\n        className={classnames(\n          `header-navbar navbar align-items-center ${navbarClasses[navbarType] || 'floating-nav'} navbar-shadow`\n        )}\n      >\n        <div className='navbar-container d-flex content'>\n          {navbar ? navbar : <NavbarComponent setMenuVisibility={setMenuVisibility} skin={skin} setSkin={setSkin} />}\n        </div>\n      </Navbar>\n      {children}\n\n      {/* Vertical Nav Menu Overlay */}\n      <div\n        className={classnames('sidenav-overlay', {\n          show: menuVisibility\n        })}\n        onClick={() => setMenuVisibility(false)}\n      ></div>\n      <footer\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n          'd-none': footerType === 'hidden'\n        })}\n      >\n        {footer ? footer : <FooterComponent footerType={footerType} footerClasses={footerClasses} />}\n      </footer>\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className='scroll-to-top'>\n          <ScrollToTop showUnder={300} style={{ bottom: '5%' }}>\n            <Button className='btn-icon' color='primary'>\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default VerticalLayout\n","//** React Imports\nimport { useEffect } from 'react'\n\n// ** Store & Actions\nimport { handleRTL } from '@store/actions/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useRTL = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const isRtl = useSelector(state => state.layout.isRTL)\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(isRtl) : value\n      dispatch(handleRTL(valueToStore))\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    // ** Get HTML Tag\n    const element = document.getElementsByTagName('html')[0]\n\n    // ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\n    if (isRtl) {\n      element.setAttribute('dir', 'rtl')\n    } else {\n      element.setAttribute('dir', 'ltr')\n    }\n  }, [isRtl])\n\n  return [isRtl, setValue]\n}\n","//** React Imports\nimport { useState } from 'react'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\nexport const useNavbarType = () => {\n  // ** State\n  const [navbarType, setNavbarType] = useState(() => {\n    try {\n      return themeConfig.layout.navbar.type\n    } catch (error) {\n      // ** If error return initialValue\n      console.log(error)\n      return themeConfig.layout.navbar.type\n    }\n  })\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(navbarType) : value\n\n      // ** Set state\n      setNavbarType(valueToStore)\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  return [navbarType, setValue]\n}\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\nexport const useFooterType = () => {\n  // ** State\n  const [footerType, setFooterType] = useState(() => {\n    try {\n      return themeConfig.layout.footer.type\n    } catch (error) {\n      // ** If error also initialValue\n      console.log(error)\n      return themeConfig.layout.footer.type\n    }\n  })\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(footerType) : value\n\n      // ** Set state\n      setFooterType(valueToStore)\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  return [footerType, setValue]\n}\n","//** React Imports\nimport { useState } from 'react'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\nexport const useNavbarColor = () => {\n  // ** State\n  const [navbarColor, setNavbarColor] = useState(() => {\n    try {\n      return themeConfig.layout.navbar.backgroundColor\n    } catch (error) {\n      // ** If error return initialValue\n      console.log(error)\n      return themeConfig.layout.navbar.backgroundColor\n    }\n  })\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(navbarColor) : value\n\n      // ** Set state\n      setNavbarColor(valueToStore)\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  return [navbarColor, setValue]\n}\n","// !Do not remove the Layout import\nimport Layout from '@layouts/VerticalLayout'\n\nconst VerticalLayout = props => <Layout {...props}>{props.children}</Layout>\n\nexport default VerticalLayout\n","// ** React Imports\nimport { Suspense, useContext, lazy } from 'react'\n\n// ** Utils\nimport { isUserLoggedIn } from '@utils'\nimport { useLayout } from '@hooks/useLayout'\nimport { AbilityContext } from '@src/utility/context/Can'\nimport { useRouterTransition } from '@hooks/useRouterTransition'\n\n// ** Custom Components\n// import Spinner from '@components/spinner/Loading-spinner' // Uncomment if your require content fallback\nimport LayoutWrapper from '@layouts/components/layout-wrapper'\n\n// ** Router Components\nimport { BrowserRouter as AppRouter, Route, Switch, Redirect } from 'react-router-dom'\n\n// ** Routes & Default Routes\nimport { DefaultRoute, Routes } from './routes'\n\n// ** Layouts\nimport BlankLayout from '@layouts/BlankLayout'\nimport VerticalLayout from '@src/layouts/VerticalLayout'\n// import HorizontalLayout from '@src/layouts/HorizontalLayout'\n\nconst Router = () => {\n  // ** Hooks\n  const [layout, setLayout] = useLayout()\n  const [transition, setTransition] = useRouterTransition()\n\n  // ** ACL Ability Context\n  const ability = useContext(AbilityContext)\n\n  // ** Default Layout\n  const DefaultLayout = 'VerticalLayout'\n\n  // ** All of the available layouts\n  const Layouts = { VerticalLayout, BlankLayout }\n\n  // ** Current Active Item\n  const currentActiveItem = null\n\n  // ** Return Filtered Array of Routes & Paths\n  const LayoutRoutesAndPaths = layout => {\n    const LayoutRoutes = []\n    const LayoutPaths = []\n\n    if (Routes) {\n      Routes.filter(route => {\n        // ** Checks if Route layout or Default layout matches current layout\n        if (route.layout === layout || (route.layout === undefined && DefaultLayout === layout)) {\n\n          LayoutRoutes.push(route)\n          LayoutPaths.push(route.path)\n\n\n        }\n      })\n    }\n\n    return { LayoutRoutes, LayoutPaths }\n  }\n\n  const NotAuthorized = lazy(() => import('@src/views/pages/misc/NotAuthorized'))\n\n  // ** Init Error Component\n  const Error = lazy(() => import('@src/views/pages/misc/Error'))\n\n  /**\n   ** Final Route Component Checks for Login & User Role and then redirects to the route\n   */\n  const FinalRoute = props => {\n    const route = props.route\n    let action, resource\n    // console.log(ability, resource)\n    // ** Assign vars based on route meta\n    if (route.meta) {\n      action = route.meta.action ? route.meta.action : null\n      resource = route.meta.resource ? route.meta.resource : null\n    }\n\n\n    if (\n      (!isUserLoggedIn() && route.meta === undefined) ||\n      (!isUserLoggedIn() && route.meta && !route.meta.authRoute && !route.meta.publicRoute)\n    ) {\n      /**\n       ** If user is not Logged in & route meta is undefined\n       ** OR\n       ** If user is not Logged in & route.meta.authRoute, !route.meta.publicRoute are undefined\n       ** Then redirect user to login\n       */\n\n      return <Redirect to='/login' />\n    } else if (route.meta && route.meta.authRoute && isUserLoggedIn()) {\n      // ** If route has meta and authRole and user is Logged in then redirect user to home page (DefaultRoute)\n      return <Redirect to='/' />\n\n    }\n    // else if (isUserLoggedIn() && !ability.can(action || 'read', resource)) {\n    //   // ** If user is Logged in and doesn't have ability to visit the page redirect the user to Not Authorized\n    //   return <Redirect to='/misc/not-authorized' />\n    // }\n    else {\n      // ** If none of the above render component\n      return <route.component {...props} />\n    }\n  }\n\n  // ** Return Route to Render\n  const ResolveRoutes = () => {\n    return Object.keys(Layouts).map((layout, index) => {\n      // ** Convert Layout parameter to Layout Component\n      // ? Note: make sure to keep layout and component name equal\n\n      const LayoutTag = Layouts[layout]\n\n      // ** Get Routes and Paths of the Layout\n      const { LayoutRoutes, LayoutPaths } = LayoutRoutesAndPaths(layout)\n\n      // ** We have freedom to display different layout for different route\n      // ** We have made LayoutTag dynamic based on layout, we can also replace it with the only layout component,\n      // ** that we want to implement like VerticalLayout or HorizontalLayout\n      // ** We segregated all the routes based on the layouts and Resolved all those routes inside layouts\n\n      // ** RouterProps to pass them to Layouts\n      const routerProps = {}\n\n      return (\n        <Route path={LayoutPaths} key={index}>\n          <LayoutTag\n            routerProps={routerProps}\n            layout={layout}\n            setLayout={setLayout}\n            transition={transition}\n            setTransition={setTransition}\n            currentActiveItem={currentActiveItem}\n          >\n            <Switch>\n              {LayoutRoutes.map(route => {\n                return (\n                  <Route\n                    key={route.path}\n                    path={route.path}\n                    exact={route.exact === true}\n                    render={props => {\n                      // ** Assign props to routerProps\n                      Object.assign(routerProps, {\n                        ...props,\n                        meta: route.meta\n                      })\n\n                      return (\n                        <Suspense fallback={null}>\n                          {/* Layout Wrapper to add classes based on route's layout, appLayout and className */}\n                          <LayoutWrapper\n                            layout={DefaultLayout}\n                            transition={transition}\n                            setTransition={setTransition}\n                            /* Conditional props */\n                            /*eslint-disable */\n                            {...(route.appLayout\n                              ? {\n                                appLayout: route.appLayout\n                              }\n                              : {})}\n                            {...(route.meta\n                              ? {\n                                routeMeta: route.meta\n                              }\n                              : {})}\n                            {...(route.className\n                              ? {\n                                wrapperClass: route.className\n                              }\n                              : {})}\n                          /*eslint-enable */\n                          >\n                            <FinalRoute route={route} {...props} />\n                          </LayoutWrapper>\n                        </Suspense>\n                      )\n                    }}\n                  />\n                )\n              })}\n            </Switch>\n          </LayoutTag>\n        </Route>\n      )\n    })\n  }\n\n  return (\n    <AppRouter basename={process.env.REACT_APP_BASENAME}>\n      <Switch>\n        {/* If user is logged in Redirect user to DefaultRoute else to login */}\n        <Route\n          exact\n          path='/'\n          render={() => {\n            return isUserLoggedIn() ? <Redirect to={DefaultRoute} /> : <Redirect to='/login' />\n          }}\n        />\n        {/* Not Auth Route */}\n        <Route\n          exact\n          path='/misc/not-authorized'\n          render={props => (\n            <Layouts.BlankLayout>\n              <NotAuthorized />\n            </Layouts.BlankLayout>\n          )}\n        />\n        {ResolveRoutes()}\n\n        {/* NotFound Error page */}\n        <Route path='*' component={Error} />\n      </Switch>\n    </AppRouter>\n  )\n}\n\nexport default Router\n","//** React Imports\nimport { useState, useEffect } from 'react'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\nexport const useLayout = () => {\n  // ** States\n  const [lastLayout, setLastLayout] = useState(null)\n  const [layout, setLayout] = useState(() => {\n    try {\n      return themeConfig.layout.type\n    } catch (error) {\n      // ** If error return initialValue\n      console.log(error)\n      return themeConfig.layout.type\n    }\n  })\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(layout) : value\n\n      // ** Set state\n      setLayout(valueToStore)\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  const handleLayout = () => {\n    // ** If layout is horizontal & screen size is equals to or below 1200\n    if (layout === 'horizontal' && window.innerWidth <= 1200) {\n      setLayout('vertical')\n      setLastLayout('horizontal')\n    }\n    // ** If lastLayout is horizontal & screen size is equals to or above 1200\n    if (lastLayout === 'horizontal' && window.innerWidth >= 1200) {\n      setLayout('horizontal')\n    }\n  }\n\n  // ** ComponentDidMount\n  useEffect(() => {\n    handleLayout()\n  }, [])\n\n  useEffect(() => {\n    // ** Window Resize Event\n    window.addEventListener('resize', handleLayout)\n  }, [layout, lastLayout])\n\n  return [layout, setValue]\n}\n","//** React Imports\nimport { useState } from 'react'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\nexport const useRouterTransition = () => {\n  // ** State\n  const [transition, setTransition] = useState(() => {\n    try {\n      return themeConfig.layout.routerTransition\n    } catch (error) {\n      // ** If error return initialValue\n      console.log(error)\n      return themeConfig.layout.routerTransition\n    }\n  })\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(transition) : value\n\n      // ** Set state\n      setTransition(valueToStore)\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  return [transition, setValue]\n}\n","// ** Router Import\nimport Router from './router/Router'\n\nconst App = props => <Router />\n\nexport default App\n"],"sourceRoot":""}